<!DOCTYPE html>

<html lang="ja" data-content_root="../">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="wsgiref --- WSGI ユーティリティとリファレンス実装" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/wsgiref.html" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="ソースコード: Lib/wsgiref Web Server Gateway Interface (WSGI) は、Web サーバソフトウェアと Python で記述された Web アプリケーションとの標準インターフェースです。標準インターフェースを持つことで、WSGI をサポートするアプリケーションを幾つもの異なる Web サーバで使うことが容易になります。 Web サーバとプログラミング..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="ソースコード: Lib/wsgiref Web Server Gateway Interface (WSGI) は、Web サーバソフトウェアと Python で記述された Web アプリケーションとの標準インターフェースです。標準インターフェースを持つことで、WSGI をサポートするアプリケーションを幾つもの異なる Web サーバで使うことが容易になります。 Web サーバとプログラミング..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>wsgiref --- WSGI ユーティリティとリファレンス実装 &#8212; Python 3.12.4 ドキュメント</title><meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=80d5e7a1" />
    <link rel="stylesheet" type="text/css" href="../_static/pydoctheme.css?v=bb723527" />
    <link id="pygments_dark_css" media="(prefers-color-scheme: dark)" rel="stylesheet" type="text/css" href="../_static/pygments_dark.css?v=b20cc3f5" />
    
    <script src="../_static/documentation_options.js?v=7e11ab17"></script>
    <script src="../_static/doctools.js?v=9a2dae69"></script>
    <script src="../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../_static/translations.js?v=4dbe4bdc"></script>
    
    <script src="../_static/sidebar.js"></script>
    
    <link rel="search" type="application/opensearchdescription+xml"
          title="Python 3.12.4 ドキュメント 内を検索"
          href="../_static/opensearch.xml"/>
    <link rel="author" title="このドキュメントについて" href="../about.html" />
    <link rel="index" title="索引" href="../genindex.html" />
    <link rel="search" title="検索" href="../search.html" />
    <link rel="copyright" title="Copyright" href="../copyright.html" />
    <link rel="next" title="urllib --- URL を扱うモジュール群" href="urllib.html" />
    <link rel="prev" title="webbrowser --- 便利なウェブブラウザーコントローラー" href="webbrowser.html" />
    
      <script defer data-domain="docs.python.org" src="https://plausible.io/js/script.js"></script>
    
    <link rel="canonical" href="https://docs.python.org/3/library/wsgiref.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
<link rel="stylesheet" href="../_static/pydoctheme_dark.css" media="(prefers-color-scheme: dark)" id="pydoctheme_dark_css">
    <link rel="shortcut icon" type="image/png" href="../_static/py.svg" />
            <script type="text/javascript" src="../_static/copybutton.js"></script>
            <script type="text/javascript" src="../_static/menu.js"></script>
            <script type="text/javascript" src="../_static/search-focus.js"></script>
            <script type="text/javascript" src="../_static/themetoggle.js"></script> 
<meta name="readthedocs-addons-api-version" content="1">
<script type="text/javascript">
 function onSwitch(event) {
     const option = event.target.selectedIndex;
     const item = event.target.options[option];
     window.location.href = item.dataset.url;
 }

 document.addEventListener("readthedocs-addons-data-ready", function(event) {
   const config = event.detail.data()

   // Add some mocked hardcoded versions pointing to the official
   // documentation while migrating to Read the Docs.
   // These are only for testing purposes.
   // TODO: remove them when managing all the versions on Read the Docs,
   // since all the "active, built and not hidden" versions will be shown automatically.
   let versions = config.versions.active.concat([
       {
           slug: "dev (3.13)",
           urls: {
               documentation: "https://docs.python.org/3.13/",
           }
       },
       {
           slug: "3.12",
           urls: {
               documentation: "https://docs.python.org/3.12/",
           }
       },
       {
           slug: "3.11",
           urls: {
               documentation: "https://docs.python.org/3.11/",
           }
       },
   ]);

   const versionSelect = `
   <select id="version_select">
   ${ versions.map(
       (version) => `
       <option
           value="${ version.slug }"
           ${ config.versions.current.slug === version.slug ? 'selected="selected"' : '' }
           data-url="${ version.urls.documentation }">
           ${ version.slug }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Prepend the current language to the options on the selector
   let languages = config.projects.translations.concat(config.projects.current);
   languages = languages.sort((a, b) => a.language.name.localeCompare(b.language.name));

   const languageSelect = `
   <select id="language_select">
   ${ languages.map(
       (translation) => `
       <option
           value="${ translation.slug }"
           ${ config.projects.current.slug === translation.slug ? 'selected="selected"' : '' }
           data-url="${ translation.urls.documentation }">
           ${ translation.language.name }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Query all the placeholders because there are different ones for Desktop/Mobile
   const versionPlaceholders = document.querySelectorAll(".version_switcher_placeholder");
   for (placeholder of versionPlaceholders) {
       placeholder.innerHTML = versionSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }

   const languagePlaceholders = document.querySelectorAll(".language_switcher_placeholder");
   for (placeholder of languagePlaceholders) {
       placeholder.innerHTML = languageSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }
 });
</script>

  </head>
<body>
<div class="mobile-nav">
    <input type="checkbox" id="menuToggler" class="toggler__input" aria-controls="navigation"
           aria-pressed="false" aria-expanded="false" role="button" aria-label="Menu" />
    <nav class="nav-content" role="navigation">
        <label for="menuToggler" class="toggler__label">
            <span></span>
        </label>
        <span class="nav-items-wrapper">
            <a href="https://www.python.org/" class="nav-logo">
                <img src="../_static/py.svg" alt="Python logo"/>
            </a>
            <span class="version_switcher_placeholder"></span>
            <form role="search" class="search" action="../search.html" method="get">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" class="search-icon">
                    <path fill-rule="nonzero" fill="currentColor" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path>
                </svg>
                <input placeholder="クイック検索" aria-label="クイック検索" type="search" name="q" />
                <input type="submit" value="検索"/>
            </form>
        </span>
    </nav>
    <div class="menu-wrapper">
        <nav class="menu" role="navigation" aria-label="main navigation">
            <div class="language_switcher_placeholder"></div>
            
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label>
  <div>
    <h3><a href="../contents.html">目次</a></h3>
    <ul>
<li><a class="reference internal" href="#"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code> --- WSGI ユーティリティとリファレンス実装</a><ul>
<li><a class="reference internal" href="#module-wsgiref.util"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code> -- WSGI 環境のユーティリティ</a></li>
<li><a class="reference internal" href="#module-wsgiref.headers"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.headers</span></code> -- WSGI レスポンスヘッダツール群</a></li>
<li><a class="reference internal" href="#module-wsgiref.simple_server"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.simple_server</span></code> -- シンプルな WSGI HTTP サーバ</a></li>
<li><a class="reference internal" href="#module-wsgiref.validate"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.validate</span></code> --- WSGI 準拠チェッカー</a></li>
<li><a class="reference internal" href="#module-wsgiref.handlers"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code> -- サーバ／ゲートウェイのベースクラス</a></li>
<li><a class="reference internal" href="#module-wsgiref.types"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.types</span></code> -- WSGI types for static type checking</a></li>
<li><a class="reference internal" href="#examples">使用例</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>前のトピックへ</h4>
    <p class="topless"><a href="webbrowser.html"
                          title="前の章へ"><code class="xref py py-mod docutils literal notranslate"><span class="pre">webbrowser</span></code> --- 便利なウェブブラウザーコントローラー</a></p>
  </div>
  <div>
    <h4>次のトピックへ</h4>
    <p class="topless"><a href="urllib.html"
                          title="次の章へ"><code class="xref py py-mod docutils literal notranslate"><span class="pre">urllib</span></code> --- URL を扱うモジュール群</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>このページ</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">バグ報告</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/wsgiref.rst"
            rel="nofollow">ソースの表示
        </a>
      </li>
    </ul>
  </div>
        </nav>
    </div>
</div>

  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>ナビゲーション</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="総合索引"
             accesskey="I">索引</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Pythonモジュール索引"
             >モジュール</a> |</li>
        <li class="right" >
          <a href="urllib.html" title="urllib --- URL を扱うモジュール群"
             accesskey="N">次へ</a> |</li>
        <li class="right" >
          <a href="webbrowser.html" title="webbrowser --- 便利なウェブブラウザーコントローラー"
             accesskey="P">前へ</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >Python 標準ライブラリ</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="internet.html" accesskey="U">インターネットプロトコルとサポート</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href=""><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code> --- WSGI ユーティリティとリファレンス実装</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="クイック検索" aria-label="クイック検索" type="search" name="q" id="search-box" />
          <input type="submit" value="検索" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>    

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <section id="module-wsgiref">
<span id="wsgiref-wsgi-utilities-and-reference-implementation"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code> --- WSGI ユーティリティとリファレンス実装<a class="headerlink" href="#module-wsgiref" title="Link to this heading">¶</a></h1>
<p><strong>ソースコード:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/wsgiref">Lib/wsgiref</a></p>
<hr class="docutils" />
<p>Web Server Gateway Interface (WSGI) は、Web サーバソフトウェアと Python で記述された Web アプリケーションとの標準インターフェースです。標準インターフェースを持つことで、WSGI をサポートするアプリケーションを幾つもの異なる Web サーバで使うことが容易になります。</p>
<p>Web サーバとプログラミングフレームワークの作者だけが、WSGI デザインのあらゆる細部や特例などを知る必要があります。WSGI アプリケーションをインストールしたり、既存のフレームワークを使ったアプリケーションを記述するだけの皆さんは、すべてについて理解する必要はありません。</p>
<p><a class="reference internal" href="#module-wsgiref" title="wsgiref: WSGI Utilities and Reference Implementation."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code></a> は WSGI 仕様のリファレンス実装で、これは Web サーバやフレームワークに WSGI サポートを加えるのに利用できます。これは WSGI 環境変数やレスポンスヘッダを操作するユーティリティ、 WSGI サーバ実装時のベースクラス、WSGI アプリケーションを提供するデモ用 HTTP サーバ、静的型チェック用の型、それと WSGI サーバとアプリケーションの WSGI 仕様 (<span class="target" id="index-35"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a>) 準拠のバリデーションツールを提供します。</p>
<p><a class="reference external" href="https://wsgi.readthedocs.io/">wsgi.readthedocs.io</a> に、WSGIに関するさらなる情報と、チュートリアルやその他のリソースへのリンクがあります。</p>
<section id="module-wsgiref.util">
<span id="wsgiref-util-wsgi-environment-utilities"></span><h2><a class="reference internal" href="#module-wsgiref.util" title="wsgiref.util: WSGI environment utilities."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code></a> -- WSGI 環境のユーティリティ<a class="headerlink" href="#module-wsgiref.util" title="Link to this heading">¶</a></h2>
<p>このモジュールは WSGI 環境で使う様々なユーティリティ関数を提供します。 WSGI 環境は <span class="target" id="index-36"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で記述されているような HTTP リクエスト変数を含む辞書です。<em>environ</em> パラメータを取るすべての関数は WSGI 準拠の辞書を与えられることを期待しています; 細かい仕様については <span class="target" id="index-37"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> を、型アノテーションに使える型エイリアスについては <a class="reference internal" href="#wsgiref.types.WSGIEnvironment" title="wsgiref.types.WSGIEnvironment"><code class="xref py py-data docutils literal notranslate"><span class="pre">WSGIEnvironment</span></code></a> を参照してください。</p>
<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.guess_scheme">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">guess_scheme</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.guess_scheme" title="Link to this definition">¶</a></dt>
<dd><p><em>environ</em> 辞書の <code class="docutils literal notranslate"><span class="pre">HTTPS</span></code> 環境変数を調べることで <code class="docutils literal notranslate"><span class="pre">wsgi.url_scheme</span></code> が &quot;http&quot; か &quot;https&quot; のどちらであるべきか推測し、その結果を返します。戻り値は文字列です。</p>
<p>この関数は、CGI や FastCGI のような CGI に似たプロトコルをラップするゲートウェイを作成する場合に便利です。典型的には、それらのプロトコルを提供するサーバが SSL 経由でリクエストを受け取った場合には <code class="docutils literal notranslate"><span class="pre">HTTPS</span></code> 変数に値 &quot;1&quot;, &quot;yes&quot; または &quot;on&quot; を持つでしょう。そのため、この関数はそのような値が見つかった場合には &quot;https&quot; を返し、そうでなければ &quot;http&quot; を返します。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.request_uri">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">request_uri</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">include_query</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.request_uri" title="Link to this definition">¶</a></dt>
<dd><p>リクエスト URI 全体 (オプションでクエリ文字列を含む) を、 <span class="target" id="index-38"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> の &quot;URL 再構築(URL Reconstruction)&quot; にあるアルゴリズムを使って返します。 <em>include_query</em> が false の場合、クエリ文字列は結果となる文字列には含まれません。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.application_uri">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">application_uri</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.application_uri" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> と <code class="docutils literal notranslate"><span class="pre">QUERY_STRING</span></code> 変数が無視されることを除けば <a class="reference internal" href="#wsgiref.util.request_uri" title="wsgiref.util.request_uri"><code class="xref py py-func docutils literal notranslate"><span class="pre">request_uri()</span></code></a> に似ています。結果はリクエストによって指定されたアプリケーションオブジェクトのベース URI です。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.shift_path_info">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">shift_path_info</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.shift_path_info" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> から <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> に一つの名前をシフトしてその名前を返します。<em>environ</em> 辞書は <em>変更されます</em> 。<code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> や <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> のオリジナルをそのまま残したい場合にはコピーを使ってください。</p>
<p><code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> にパスセグメントが何も残っていなければ、<code class="docutils literal notranslate"><span class="pre">None</span></code> が返されます。</p>
<p>典型的なこのルーチンの使い方はリクエスト URI のそれぞれの要素の処理で、例えばパスを一連の辞書のキーとして取り扱う場合です。このルーチンは、渡された環境を、ターゲット URL で示される別の WSGI アプリケーションの呼び出しに合うように調整します。例えば、 <code class="docutils literal notranslate"><span class="pre">/foo</span></code> に WSGI アプリケーションがあったとして、そしてリクエスト URL パスが <code class="docutils literal notranslate"><span class="pre">/foo/bar/baz</span></code> で、 <code class="docutils literal notranslate"><span class="pre">/foo</span></code> の WSGI アプリケーションが <a class="reference internal" href="#wsgiref.util.shift_path_info" title="wsgiref.util.shift_path_info"><code class="xref py py-func docutils literal notranslate"><span class="pre">shift_path_info()</span></code></a> を呼んだ場合、これは &quot;bar&quot; 文字列を受け取り、 environ は <code class="docutils literal notranslate"><span class="pre">/foo/bar</span></code> の WSGI アプリケーションへの受け渡しに適するように更新されます。つまり、 <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> は <code class="docutils literal notranslate"><span class="pre">/foo</span></code> から <code class="docutils literal notranslate"><span class="pre">/foo/bar</span></code> に変わって、 <code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> は <code class="docutils literal notranslate"><span class="pre">/bar/baz</span></code> から <code class="docutils literal notranslate"><span class="pre">/baz</span></code> に変化するのです。</p>
<p><code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> が単に &quot;/&quot; の場合、このルーチンは空の文字列を返し、<code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> の末尾にスラッシュを加えます、これはたとえ空のパスセグメントが通常は無視され、そして <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> は通常スラッシュで終わる事が無かったとしてもです。これは意図的な振る舞いで、このルーチンでオブジェクト巡回(object traversal) をした場合に <code class="docutils literal notranslate"><span class="pre">/x</span></code> で終わる URI と <code class="docutils literal notranslate"><span class="pre">/x/</span></code> で終わるものをアプリケーションが識別できることを保証するためのものです。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.setup_testing_defaults">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">setup_testing_defaults</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.setup_testing_defaults" title="Link to this definition">¶</a></dt>
<dd><p><em>environ</em> をテスト用に自明なデフォルト値で更新します。</p>
<p>このルーチンは WSGI に必要な様々なパラメータを追加します。そのようなパラメータとして <code class="docutils literal notranslate"><span class="pre">HTTP_HOST</span></code> 、 <code class="docutils literal notranslate"><span class="pre">SERVER_NAME</span></code> 、 <code class="docutils literal notranslate"><span class="pre">SERVER_PORT</span></code> 、 <code class="docutils literal notranslate"><span class="pre">REQUEST_METHOD</span></code> 、 <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> 、 <code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> 、そして <span class="target" id="index-39"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で定義されている <code class="docutils literal notranslate"><span class="pre">wsgi.*</span></code> 変数群が含まれます。このルーチンはデフォルト値を提供するだけで、これらの変数の既存設定は一切置きかえません。</p>
<p>このルーチンは、ダミー環境をセットアップすることによって WSGI サーバとアプリケーションのユニットテストを容易にすることを意図しています。これは実際の WSGI サーバやアプリケーションで使うべきではありません。なぜならこのデータは偽物なのです！</p>
<p>使用例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">wsgiref.util</span> <span class="kn">import</span> <span class="n">setup_testing_defaults</span>
<span class="kn">from</span> <span class="nn">wsgiref.simple_server</span> <span class="kn">import</span> <span class="n">make_server</span>

<span class="c1"># A relatively simple WSGI application. It&#39;s going to print out the</span>
<span class="c1"># environment dictionary after being updated by setup_testing_defaults</span>
<span class="k">def</span> <span class="nf">simple_app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span>
    <span class="n">setup_testing_defaults</span><span class="p">(</span><span class="n">environ</span><span class="p">)</span>

    <span class="n">status</span> <span class="o">=</span> <span class="s1">&#39;200 OK&#39;</span>
    <span class="n">headers</span> <span class="o">=</span> <span class="p">[(</span><span class="s1">&#39;Content-type&#39;</span><span class="p">,</span> <span class="s1">&#39;text/plain; charset=utf-8&#39;</span><span class="p">)]</span>

    <span class="n">start_response</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>

    <span class="n">ret</span> <span class="o">=</span> <span class="p">[(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">: </span><span class="si">%s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">))</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)</span>
           <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">environ</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
    <span class="k">return</span> <span class="n">ret</span>

<span class="k">with</span> <span class="n">make_server</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">,</span> <span class="n">simple_app</span><span class="p">)</span> <span class="k">as</span> <span class="n">httpd</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Serving on port 8000...&quot;</span><span class="p">)</span>
    <span class="n">httpd</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</pre></div>
</div>
</dd></dl>

<p>上記の環境用関数に加えて、 <a class="reference internal" href="#module-wsgiref.util" title="wsgiref.util: WSGI environment utilities."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code></a> モジュールも以下のようなその他のユーティリティを提供します:</p>
<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.util.is_hop_by_hop">
<span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">is_hop_by_hop</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">header_name</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.is_hop_by_hop" title="Link to this definition">¶</a></dt>
<dd><p>'header_name' が <span class="target" id="index-40"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2616.html"><strong>RFC 2616</strong></a> で定義されている HTTP/1.1 の &quot;Hop-by-Hop&quot; ヘッダの場合に <code class="docutils literal notranslate"><span class="pre">True</span></code> を返します。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.util.FileWrapper">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.util.</span></span><span class="sig-name descname"><span class="pre">FileWrapper</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">filelike</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">blksize</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">8192</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.util.FileWrapper" title="Link to this definition">¶</a></dt>
<dd><p>A concrete implementation of the <a class="reference internal" href="#wsgiref.types.FileWrapper" title="wsgiref.types.FileWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">wsgiref.types.FileWrapper</span></code></a>
protocol used to convert a file-like object to an <a class="reference internal" href="../glossary.html#term-iterator"><span class="xref std std-term">iterator</span></a>.
The resulting objects
are <a class="reference internal" href="../glossary.html#term-iterable"><span class="xref std std-term">iterable</span></a>s. As the object is iterated over, the
optional <em>blksize</em> parameter will be repeatedly passed to the <em>filelike</em>
object's <code class="xref py py-meth docutils literal notranslate"><span class="pre">read()</span></code> method to obtain bytestrings to yield.  When <code class="xref py py-meth docutils literal notranslate"><span class="pre">read()</span></code>
returns an empty bytestring, iteration is ended and is not resumable.</p>
<p><em>filelike</em> に <code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code> メソッドがある場合、返されたオブジェクトも <code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code> メソッドを持ち、これが呼ばれた場合には <em>filelike</em> オブジェクトの <code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code> メソッドを呼び出します。</p>
<p>使用例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">io</span> <span class="kn">import</span> <span class="n">StringIO</span>
<span class="kn">from</span> <span class="nn">wsgiref.util</span> <span class="kn">import</span> <span class="n">FileWrapper</span>

<span class="c1"># We&#39;re using a StringIO-buffer for as the file-like object</span>
<span class="n">filelike</span> <span class="o">=</span> <span class="n">StringIO</span><span class="p">(</span><span class="s2">&quot;This is an example file-like object&quot;</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span>
<span class="n">wrapper</span> <span class="o">=</span> <span class="n">FileWrapper</span><span class="p">(</span><span class="n">filelike</span><span class="p">,</span> <span class="n">blksize</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="k">for</span> <span class="n">chunk</span> <span class="ow">in</span> <span class="n">wrapper</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
</pre></div>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">バージョン 3.11 で変更: </span>Support for <a class="reference internal" href="../reference/datamodel.html#object.__getitem__" title="object.__getitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getitem__()</span></code></a> method has been removed.</p>
</div>
</dd></dl>

</section>
<section id="module-wsgiref.headers">
<span id="wsgiref-headers-wsgi-response-header-tools"></span><h2><a class="reference internal" href="#module-wsgiref.headers" title="wsgiref.headers: WSGI response header tools."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.headers</span></code></a> -- WSGI レスポンスヘッダツール群<a class="headerlink" href="#module-wsgiref.headers" title="Link to this heading">¶</a></h2>
<p>このモジュールは単一のクラス、 <a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> を提供し、WSGI レスポンスヘッダの操作をマップに似たインターフェースで便利にします。</p>
<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.headers.Headers">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.headers.</span></span><span class="sig-name descname"><span class="pre">Headers</span></span><span class="sig-paren">(</span><span class="optional">[</span><em class="sig-param"><span class="n"><span class="pre">headers</span></span></em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.headers.Headers" title="Link to this definition">¶</a></dt>
<dd><p><em>headers</em> をラップするマップ風オブジェクトを生成します。これは <span class="target" id="index-41"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> に定義されるようなヘッダの名前／値のタプルのリストです。 <em>headers</em> のデフォルト値は空のリストです。</p>
<p><a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> objects support typical mapping operations including
<a class="reference internal" href="../reference/datamodel.html#object.__getitem__" title="object.__getitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getitem__()</span></code></a>, <a class="reference internal" href="stdtypes.html#dict.get" title="dict.get"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get()</span></code></a>, <a class="reference internal" href="../reference/datamodel.html#object.__setitem__" title="object.__setitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__setitem__()</span></code></a>,
<a class="reference internal" href="stdtypes.html#dict.setdefault" title="dict.setdefault"><code class="xref py py-meth docutils literal notranslate"><span class="pre">setdefault()</span></code></a>,
<a class="reference internal" href="../reference/datamodel.html#object.__delitem__" title="object.__delitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__delitem__()</span></code></a> and <a class="reference internal" href="../reference/datamodel.html#object.__contains__" title="object.__contains__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__contains__()</span></code></a>.  For each of
these methods, the key is the header name (treated case-insensitively), and the
value is the first value associated with that header name.  Setting a header
deletes any existing values for that header, then adds a new value at the end of
the wrapped header list.  Headers' existing order is generally maintained, with
new headers added to the end of the wrapped list.</p>
<p>辞書とは違って、 <a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> オブジェクトはラップされたヘッダリストに存在しないキーを取得または削除しようとした場合にもエラーを発生しません。単に、存在しないヘッダの取得は <code class="docutils literal notranslate"><span class="pre">None</span></code> を返し、存在しないヘッダの削除は何もしません。</p>
<p><a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> オブジェクトは <code class="xref py py-meth docutils literal notranslate"><span class="pre">keys()</span></code> 、 <code class="xref py py-meth docutils literal notranslate"><span class="pre">values()</span></code> 、 <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> メソッドもサポートします。複数の値を持つヘッダがある場合には、 <code class="xref py py-meth docutils literal notranslate"><span class="pre">keys()</span></code> と <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> で返されるリストは同じキーを一つ以上含むことがあります。 <a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> オブジェクトの <code class="docutils literal notranslate"><span class="pre">len()</span></code> は、その <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> の長さと同じであり、ラップされたヘッダリストの長さと同じです。実際、 <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> メソッドは単にラップされたヘッダリストのコピーを返しているだけです。</p>
<p><a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> オブジェクトに対して <code class="docutils literal notranslate"><span class="pre">bytes()</span></code> を呼ぶと、HTTP レスポンスヘッダとして送信するのに適した形に整形されたバイト文字列を返します。それぞれのヘッダはコロンとスペースで区切られた値と共に一列に並んでいます。それぞれの行はキャリッジリターンとラインフィードで終了し、バイト文字列は空行で終了しています。</p>
<p>これらのマッピングインターフェースと整形機能に加えて、 <a class="reference internal" href="#wsgiref.headers.Headers" title="wsgiref.headers.Headers"><code class="xref py py-class docutils literal notranslate"><span class="pre">Headers</span></code></a> オブジェクトは複数の値を持つヘッダの取得と追加、MIME パラメータでヘッダを追加するための以下のようなメソッド群も持っています:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.headers.Headers.get_all">
<span class="sig-name descname"><span class="pre">get_all</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">name</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.headers.Headers.get_all" title="Link to this definition">¶</a></dt>
<dd><p>指定されたヘッダのすべての値のリストを返します。</p>
<p>返されるリストは、元々のヘッダリストに現れる順、またはこのインスタンスに追加された順に並んでいて、重複を含む場合があります。削除されて加えられたフィールドはすべてヘッダリストの末尾に付きます。与えられた name に対するフィールドが何もなければ、空のリストが返ります。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.headers.Headers.add_header">
<span class="sig-name descname"><span class="pre">add_header</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">value</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">_params</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.headers.Headers.add_header" title="Link to this definition">¶</a></dt>
<dd><p>(複数の値を持つ可能性のある) ヘッダを、キーワード引数を通じて指定するオプションの MIME パラメータと共に追加します。</p>
<p><em>name</em> は追加するヘッダフィールドです。このヘッダフィールドに MIME パラメータを設定するためにキーワード引数を使うことができます。それぞれのパラメータは文字列か <code class="docutils literal notranslate"><span class="pre">None</span></code> でなければいけません。パラメータ中のアンダースコアはダッシュ (-) に変換されます。これは、ダッシュが Python の識別子としては不正なのですが、多くの MIME パラメータはダッシュを含むためです。パラメータ値が文字列の場合、これはヘッダ値のパラメータに <code class="docutils literal notranslate"><span class="pre">name=&quot;value&quot;</span></code> の形で追加されます。この値がもし <code class="docutils literal notranslate"><span class="pre">None</span></code> の場合、パラメータ名だけが追加されます。（これは値なしの MIME パラメータの場合に使われます。）使い方の例は:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">h</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s1">&#39;content-disposition&#39;</span><span class="p">,</span> <span class="s1">&#39;attachment&#39;</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s1">&#39;bud.gif&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>上記はこのようなヘッダを追加します:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">Content</span><span class="o">-</span><span class="n">Disposition</span><span class="p">:</span> <span class="n">attachment</span><span class="p">;</span> <span class="n">filename</span><span class="o">=</span><span class="s2">&quot;bud.gif&quot;</span>
</pre></div>
</div>
</dd></dl>

<div class="versionchanged">
<p><span class="versionmodified changed">バージョン 3.5 で変更: </span><em>headers</em> 引数が任意になりました。</p>
</div>
</dd></dl>

</section>
<section id="module-wsgiref.simple_server">
<span id="wsgiref-simple-server-a-simple-wsgi-http-server"></span><h2><a class="reference internal" href="#module-wsgiref.simple_server" title="wsgiref.simple_server: A simple WSGI HTTP server."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.simple_server</span></code></a> -- シンプルな WSGI HTTP サーバ<a class="headerlink" href="#module-wsgiref.simple_server" title="Link to this heading">¶</a></h2>
<p>このモジュールは WSGI アプリケーションを提供するシンプルな HTTP サーバです (<a class="reference internal" href="http.server.html#module-http.server" title="http.server: HTTP server and request handlers."><code class="xref py py-mod docutils literal notranslate"><span class="pre">http.server</span></code></a> がベースです)。個々のサーバインスタンスは単一の WSGI アプリケーションを、特定のホストとポート上で提供します。もし一つのホストとポート上で複数のアプリケーションを提供したいならば、 <code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> をパースして個々のリクエストでどのアプリケーションを呼び出すか選択するような WSGI アプリケーションを作る必要があります。（例えば、 <a class="reference internal" href="#module-wsgiref.util" title="wsgiref.util: WSGI environment utilities."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code></a> から <code class="xref py py-func docutils literal notranslate"><span class="pre">shift_path_info()</span></code> を利用します。）</p>
<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.simple_server.make_server">
<span class="sig-prename descclassname"><span class="pre">wsgiref.simple_server.</span></span><span class="sig-name descname"><span class="pre">make_server</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">host</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">port</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">app</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">server_class</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">WSGIServer</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">handler_class</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">WSGIRequestHandler</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.make_server" title="Link to this definition">¶</a></dt>
<dd><p><em>host</em> と <em>port</em> 上で待機し、 <em>app</em> へのコネクションを受け付ける  WSGI サーバを作成します。戻り値は与えられた <em>server_class</em> のインスタンスで、指定された <em>handler_class</em> を使ってリクエストを処理します。 <em>app</em> は <span class="target" id="index-42"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で定義されるところの WSGI アプリケーションでなければいけません。</p>
<p>使用例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">wsgiref.simple_server</span> <span class="kn">import</span> <span class="n">make_server</span><span class="p">,</span> <span class="n">demo_app</span>

<span class="k">with</span> <span class="n">make_server</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">,</span> <span class="n">demo_app</span><span class="p">)</span> <span class="k">as</span> <span class="n">httpd</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Serving HTTP on port 8000...&quot;</span><span class="p">)</span>

    <span class="c1"># Respond to requests until process is killed</span>
    <span class="n">httpd</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>

    <span class="c1"># Alternative: serve one request, then exit</span>
    <span class="n">httpd</span><span class="o">.</span><span class="n">handle_request</span><span class="p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.simple_server.demo_app">
<span class="sig-prename descclassname"><span class="pre">wsgiref.simple_server.</span></span><span class="sig-name descname"><span class="pre">demo_app</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_response</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.demo_app" title="Link to this definition">¶</a></dt>
<dd><p>この関数は小規模ながら完全な WSGI アプリケーションで、 &quot;Hello world!&quot; メッセージと、 <em>environ</em> パラメータに提供されているキー／値のペアを含むテキストページを返します。これは WSGI サーバ (<a class="reference internal" href="#module-wsgiref.simple_server" title="wsgiref.simple_server: A simple WSGI HTTP server."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.simple_server</span></code></a> のような) がシンプルな WSGI アプリケーションを正しく実行できるかを確かめるのに便利です。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIServer">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.simple_server.</span></span><span class="sig-name descname"><span class="pre">WSGIServer</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">server_address</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">RequestHandlerClass</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIServer" title="Link to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> インスタンスを作成します。 <em>server_address</em> は <code class="docutils literal notranslate"><span class="pre">(host,port)</span></code> のタプル、そして <em>RequestHandlerClass</em> はリクエストの処理に使われる <a class="reference internal" href="http.server.html#http.server.BaseHTTPRequestHandler" title="http.server.BaseHTTPRequestHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">http.server.BaseHTTPRequestHandler</span></code></a> のサブクラスでなければいけません。</p>
<p><a class="reference internal" href="#wsgiref.simple_server.make_server" title="wsgiref.simple_server.make_server"><code class="xref py py-func docutils literal notranslate"><span class="pre">make_server()</span></code></a> が細かい調整をやってくれるので、通常はこのコンストラクタを呼ぶ必要はありません。</p>
<p><a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> は <a class="reference internal" href="http.server.html#http.server.HTTPServer" title="http.server.HTTPServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">http.server.HTTPServer</span></code></a> のサブクラスなので、そのすべてのメソッド (<code class="xref py py-meth docutils literal notranslate"><span class="pre">serve_forever()</span></code> や <code class="xref py py-meth docutils literal notranslate"><span class="pre">handle_request()</span></code> のような) が利用できます。 <a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> も以下のような WSGI 固有メソッドを提供します:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIServer.set_app">
<span class="sig-name descname"><span class="pre">set_app</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">application</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIServer.set_app" title="Link to this definition">¶</a></dt>
<dd><p>呼び出し可能 (callable) な <em>application</em> をリクエストを受け取る WSGI アプリケーションとして設定します。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIServer.get_app">
<span class="sig-name descname"><span class="pre">get_app</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIServer.get_app" title="Link to this definition">¶</a></dt>
<dd><p>Returns the currently set application callable.</p>
</dd></dl>

<p>しかしながら、通常はこれらの追加されたメソッドを使う必要はありません。 <a class="reference internal" href="#wsgiref.simple_server.WSGIServer.set_app" title="wsgiref.simple_server.WSGIServer.set_app"><code class="xref py py-meth docutils literal notranslate"><span class="pre">set_app()</span></code></a> は普通は <a class="reference internal" href="#wsgiref.simple_server.make_server" title="wsgiref.simple_server.make_server"><code class="xref py py-func docutils literal notranslate"><span class="pre">make_server()</span></code></a> によって呼ばれ、 <a class="reference internal" href="#wsgiref.simple_server.WSGIServer.get_app" title="wsgiref.simple_server.WSGIServer.get_app"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_app()</span></code></a> は主にリクエストハンドラインスタンスの便宜上存在するからです。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIRequestHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.simple_server.</span></span><span class="sig-name descname"><span class="pre">WSGIRequestHandler</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">request</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">client_address</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">server</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIRequestHandler" title="Link to this definition">¶</a></dt>
<dd><p>与えられた <em>request</em> （すなわちソケット）の HTTP ハンドラ、 <em>client_address</em> (<code class="docutils literal notranslate"><span class="pre">(host,port)</span></code> のタプル)、 <em>server</em> (<a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> インスタンス) の HTTP ハンドラを作成します。</p>
<p>このクラスのインスタンスを直接生成する必要はありません; これらは必要に応じて <a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> オブジェクトによって自動的に生成されます。しかしながら、このクラスをサブクラス化し、 <a class="reference internal" href="#wsgiref.simple_server.make_server" title="wsgiref.simple_server.make_server"><code class="xref py py-func docutils literal notranslate"><span class="pre">make_server()</span></code></a> 関数に <em>handler_class</em> として与えることは可能でしょう。サブクラスにおいてオーバーライドする意味のありそうなものは:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIRequestHandler.get_environ">
<span class="sig-name descname"><span class="pre">get_environ</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIRequestHandler.get_environ" title="Link to this definition">¶</a></dt>
<dd><p>リクエストに対する <a class="reference internal" href="#wsgiref.types.WSGIEnvironment" title="wsgiref.types.WSGIEnvironment"><code class="xref py py-data docutils literal notranslate"><span class="pre">WSGIEnvironment</span></code></a> 辞書を返します。デフォルト実装では <a class="reference internal" href="#wsgiref.simple_server.WSGIServer" title="wsgiref.simple_server.WSGIServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">WSGIServer</span></code></a> オブジェクトの <code class="xref py py-attr docutils literal notranslate"><span class="pre">base_environ</span></code> 辞書属性のコンテンツをコピーし、それから HTTP リクエスト由来の様々なヘッダを追加しています。このメソッド呼び出し毎に、 <span class="target" id="index-43"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> に指定されている関連する CGI 環境変数をすべて含む新規の辞書を返さなければいけません。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIRequestHandler.get_stderr">
<span class="sig-name descname"><span class="pre">get_stderr</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIRequestHandler.get_stderr" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">wsgi.errors</span></code> ストリームとして使われるオブジェクトを返します。デフォルト実装では単に <code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code> を返します。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.simple_server.WSGIRequestHandler.handle">
<span class="sig-name descname"><span class="pre">handle</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.simple_server.WSGIRequestHandler.handle" title="Link to this definition">¶</a></dt>
<dd><p>HTTP リクエストを処理します。デフォルト実装では実際の WGI アプリケーションインターフェースを実装するのに <a class="reference internal" href="#module-wsgiref.handlers" title="wsgiref.handlers: WSGI server/gateway base classes."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code></a> クラスを使ってハンドラインスタンスを作成します。</p>
</dd></dl>

</dd></dl>

</section>
<section id="module-wsgiref.validate">
<span id="wsgiref-validate-wsgi-conformance-checker"></span><h2><a class="reference internal" href="#module-wsgiref.validate" title="wsgiref.validate: WSGI conformance checker."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.validate</span></code></a> --- WSGI 準拠チェッカー<a class="headerlink" href="#module-wsgiref.validate" title="Link to this heading">¶</a></h2>
<p>WSGI アプリケーションのオブジェクト、フレームワーク、サーバまたはミドルウェアの作成時には、その新規のコードを <a class="reference internal" href="#module-wsgiref.validate" title="wsgiref.validate: WSGI conformance checker."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.validate</span></code></a> を使って準拠の検証をすると便利です。このモジュールは WSGI サーバやゲートウェイと WSGI アプリケーションオブジェクト間の通信を検証する WSGI アプリケーションオブジェクトを作成する関数を提供し、双方のプロトコル準拠をチェックします。</p>
<p>このユーティリティは完全な <span class="target" id="index-44"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> 準拠を保証するものでないことは注意してください; このモジュールでエラーが出ないことは必ずしもエラーが存在しないことを意味しません。しかしこのモジュールがエラーを出したならば、ほぼ確実にサーバかアプリケーションのどちらかが 100% 準拠ではありません。</p>
<p>このモジュールは lan Bicking の &quot;Python Paste&quot; ライブラリの <code class="xref py py-mod docutils literal notranslate"><span class="pre">paste.lint</span></code> モジュールをベースにしています。</p>
<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.validate.validator">
<span class="sig-prename descclassname"><span class="pre">wsgiref.validate.</span></span><span class="sig-name descname"><span class="pre">validator</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">application</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.validate.validator" title="Link to this definition">¶</a></dt>
<dd><p><em>application</em> をラップし、新しい WSGI アプリケーションオブジェクトを返します。返されたアプリケーションは全てのリクエストを元々の <em>application</em> に転送し、<em>application</em> とそれを呼び出すサーバの両方が WSGI 仕様と <span class="target" id="index-45"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2616.html"><strong>RFC 2616</strong></a> の両方に準拠しているかをチェックします。</p>
<p>何らかの非準拠が検出されると、 <a class="reference internal" href="exceptions.html#AssertionError" title="AssertionError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">AssertionError</span></code></a> 例外が送出されます; しかし、このエラーがどう扱われるかはサーバ依存であることに注意してください。例えば、 <a class="reference internal" href="#module-wsgiref.simple_server" title="wsgiref.simple_server: A simple WSGI HTTP server."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.simple_server</span></code></a> とその他 <a class="reference internal" href="#module-wsgiref.handlers" title="wsgiref.handlers: WSGI server/gateway base classes."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code></a> ベースのサーバ（エラー処理メソッドが他のことをするようにオーバライドしていないもの）は単純にエラーが発生したというメッセージとトレースバックのダンプを <code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code> やその他のエラーストリームに出力します。</p>
<p>このラッパーは、疑わしいものの実際には <span class="target" id="index-46"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で禁止されていないかもしれない挙動を指摘するために <a class="reference internal" href="warnings.html#module-warnings" title="warnings: Issue warning messages and control their disposition."><code class="xref py py-mod docutils literal notranslate"><span class="pre">warnings</span></code></a> モジュールを使って出力を生成します。これらは Python のコマンドラインオプションや <a class="reference internal" href="warnings.html#module-warnings" title="warnings: Issue warning messages and control their disposition."><code class="xref py py-mod docutils literal notranslate"><span class="pre">warnings</span></code></a> API で抑制されなければ、 <code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code> (<code class="docutils literal notranslate"><span class="pre">wsgi.errors</span></code> では <em>ありません</em> 。ただし、たまたま同一のオブジェクトだった場合を除く)に書き出されます。</p>
<p>使用例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">wsgiref.validate</span> <span class="kn">import</span> <span class="n">validator</span>
<span class="kn">from</span> <span class="nn">wsgiref.simple_server</span> <span class="kn">import</span> <span class="n">make_server</span>

<span class="c1"># Our callable object which is intentionally not compliant to the</span>
<span class="c1"># standard, so the validator is going to break</span>
<span class="k">def</span> <span class="nf">simple_app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span>
    <span class="n">status</span> <span class="o">=</span> <span class="s1">&#39;200 OK&#39;</span>  <span class="c1"># HTTP Status</span>
    <span class="n">headers</span> <span class="o">=</span> <span class="p">[(</span><span class="s1">&#39;Content-type&#39;</span><span class="p">,</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">)]</span>  <span class="c1"># HTTP Headers</span>
    <span class="n">start_response</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>

    <span class="c1"># This is going to break because we need to return a list, and</span>
    <span class="c1"># the validator is going to inform us</span>
    <span class="k">return</span> <span class="sa">b</span><span class="s2">&quot;Hello World&quot;</span>

<span class="c1"># This is the application wrapped in a validator</span>
<span class="n">validator_app</span> <span class="o">=</span> <span class="n">validator</span><span class="p">(</span><span class="n">simple_app</span><span class="p">)</span>

<span class="k">with</span> <span class="n">make_server</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">,</span> <span class="n">validator_app</span><span class="p">)</span> <span class="k">as</span> <span class="n">httpd</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Listening on port 8000....&quot;</span><span class="p">)</span>
    <span class="n">httpd</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id="module-wsgiref.handlers">
<span id="wsgiref-handlers-server-gateway-base-classes"></span><h2><a class="reference internal" href="#module-wsgiref.handlers" title="wsgiref.handlers: WSGI server/gateway base classes."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code></a> -- サーバ／ゲートウェイのベースクラス<a class="headerlink" href="#module-wsgiref.handlers" title="Link to this heading">¶</a></h2>
<p>このモジュールは WSGI サーバとゲートウェイ実装のベースハンドラクラスを提供します。これらのベースクラスは、CGI 風の環境と、それに加えて入力、出力そしてエラーストリームが与えられることで、WSGI アプリケーションとの通信の大部分を処理します。</p>
<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.handlers.CGIHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">CGIHandler</span></span><a class="headerlink" href="#wsgiref.handlers.CGIHandler" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">sys.stdin</span></code>、<code class="docutils literal notranslate"><span class="pre">sys.stdout</span></code>、<code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code> そして <code class="docutils literal notranslate"><span class="pre">os.environ</span></code> 経由での CGI ベースの呼び出しです。これは、もしあなたが WSGI アプリケーションを持っていて、これを CGI スクリプトとして実行したい場合に有用です。単に <code class="docutils literal notranslate"><span class="pre">CGIHandler().run(app)</span></code> を起動してください。<code class="docutils literal notranslate"><span class="pre">app</span></code> はあなたが起動したい WSGI アプリケーションオブジェクトです。</p>
<p>このクラスは <a class="reference internal" href="#wsgiref.handlers.BaseCGIHandler" title="wsgiref.handlers.BaseCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseCGIHandler</span></code></a> のサブクラスで、これは <code class="docutils literal notranslate"><span class="pre">wsgi.run_once</span></code> を true、 <code class="docutils literal notranslate"><span class="pre">wsgi.multithread</span></code> を false、そして <code class="docutils literal notranslate"><span class="pre">wsgi.multiprocess</span></code> を true にセットし、常に <a class="reference internal" href="sys.html#module-sys" title="sys: Access system-specific parameters and functions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">sys</span></code></a> と <a class="reference internal" href="os.html#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> を、必要な CGI ストリームと環境を取得するために使用します。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.handlers.IISCGIHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">IISCGIHandler</span></span><a class="headerlink" href="#wsgiref.handlers.IISCGIHandler" title="Link to this definition">¶</a></dt>
<dd><p>(IIS 7 以降の) 設定オプションの allowPathInfo や (IIS 7 より前の) メタベースの allowPathInfoForScriptMappings を設定せずに Microsoft の IIS Web サーバにデプロイするときに使う、 <a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> クラス以外の専用の選択肢です。</p>
<p>By default, IIS gives a <code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code> that duplicates the <code class="docutils literal notranslate"><span class="pre">SCRIPT_NAME</span></code> at
the front, causing problems for WSGI applications that wish to implement
routing. This handler strips any such duplicated path.</p>
<p>IIS can be configured to pass the correct <code class="docutils literal notranslate"><span class="pre">PATH_INFO</span></code>, but this causes
another bug where <code class="docutils literal notranslate"><span class="pre">PATH_TRANSLATED</span></code> is wrong. Luckily this variable is
rarely used and is not guaranteed by WSGI. On IIS&lt;7, though, the
setting can only be made on a vhost level, affecting all other script
mappings, many of which break when exposed to the <code class="docutils literal notranslate"><span class="pre">PATH_TRANSLATED</span></code> bug.
For this reason IIS&lt;7 is almost never deployed with the fix (Even IIS7
rarely uses it because there is still no UI for it.).</p>
<p>There is no way for CGI code to tell whether the option was set, so a
separate handler class is provided.  It is used in the same way as
<a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a>, i.e., by calling <code class="docutils literal notranslate"><span class="pre">IISCGIHandler().run(app)</span></code>, where
<code class="docutils literal notranslate"><span class="pre">app</span></code> is the WSGI application object you wish to invoke.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2.</span></p>
</div>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseCGIHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">BaseCGIHandler</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">stdin</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">stdout</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">stderr</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">environ</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">multithread</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">multiprocess</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseCGIHandler" title="Link to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> に似ていますが、 <a class="reference internal" href="sys.html#module-sys" title="sys: Access system-specific parameters and functions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">sys</span></code></a> と <a class="reference internal" href="os.html#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> モジュールを使う代わりに CGI 環境と I/O ストリームを明示的に指定します。 <em>multithread</em> と <em>multiprocess</em> の値は、ハンドラインスタンスにより実行されるアプリケーションの <code class="docutils literal notranslate"><span class="pre">wsgi.multithread</span></code> と <code class="docutils literal notranslate"><span class="pre">wsgi.multiprocess</span></code> フラグの設定に使われます。</p>
<p>このクラスは <a class="reference internal" href="#wsgiref.handlers.SimpleHandler" title="wsgiref.handlers.SimpleHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">SimpleHandler</span></code></a> のサブクラスで、HTTP の &quot;本サーバ&quot; でないソフトウェアと使うことを意図しています。もしあなたが <code class="docutils literal notranslate"><span class="pre">Status:</span></code> ヘッダを HTTP ステータスを送信するのに使うようなゲートウェイプロトコルの実装（CGI、FastCGI、SCGIなど）を書いている場合、おそらく <a class="reference internal" href="#wsgiref.handlers.SimpleHandler" title="wsgiref.handlers.SimpleHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">SimpleHandler</span></code></a> ではなくこのクラスをサブクラス化するとよいでしょう。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.handlers.SimpleHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">SimpleHandler</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">stdin</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">stdout</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">stderr</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">environ</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">multithread</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">multiprocess</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.SimpleHandler" title="Link to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#wsgiref.handlers.BaseCGIHandler" title="wsgiref.handlers.BaseCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseCGIHandler</span></code></a> と似ていますが、HTTP の本サーバと使うためにデザインされています。もしあなたが HTTP サーバ実装を書いている場合、おそらく <a class="reference internal" href="#wsgiref.handlers.BaseCGIHandler" title="wsgiref.handlers.BaseCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseCGIHandler</span></code></a> ではなくこのクラスをサブクラス化するとよいでしょう。</p>
<p>This class is a subclass of <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a>.  It overrides the
<code class="xref py py-meth docutils literal notranslate"><span class="pre">__init__()</span></code>, <a class="reference internal" href="#wsgiref.handlers.BaseHandler.get_stdin" title="wsgiref.handlers.BaseHandler.get_stdin"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_stdin()</span></code></a>,
<a class="reference internal" href="#wsgiref.handlers.BaseHandler.get_stderr" title="wsgiref.handlers.BaseHandler.get_stderr"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_stderr()</span></code></a>, <a class="reference internal" href="#wsgiref.handlers.BaseHandler.add_cgi_vars" title="wsgiref.handlers.BaseHandler.add_cgi_vars"><code class="xref py py-meth docutils literal notranslate"><span class="pre">add_cgi_vars()</span></code></a>,
<a class="reference internal" href="#wsgiref.handlers.BaseHandler._write" title="wsgiref.handlers.BaseHandler._write"><code class="xref py py-meth docutils literal notranslate"><span class="pre">_write()</span></code></a>, and <a class="reference internal" href="#wsgiref.handlers.BaseHandler._flush" title="wsgiref.handlers.BaseHandler._flush"><code class="xref py py-meth docutils literal notranslate"><span class="pre">_flush()</span></code></a> methods to
support explicitly setting the
environment and streams via the constructor.  The supplied environment and
streams are stored in the <code class="xref py py-attr docutils literal notranslate"><span class="pre">stdin</span></code>, <code class="xref py py-attr docutils literal notranslate"><span class="pre">stdout</span></code>, <code class="xref py py-attr docutils literal notranslate"><span class="pre">stderr</span></code>, and
<code class="xref py py-attr docutils literal notranslate"><span class="pre">environ</span></code> attributes.</p>
<p>The <a class="reference internal" href="io.html#io.BufferedIOBase.write" title="io.BufferedIOBase.write"><code class="xref py py-meth docutils literal notranslate"><span class="pre">write()</span></code></a> method of <em>stdout</em> should write
each chunk in full, like <a class="reference internal" href="io.html#io.BufferedIOBase" title="io.BufferedIOBase"><code class="xref py py-class docutils literal notranslate"><span class="pre">io.BufferedIOBase</span></code></a>.</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">BaseHandler</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler" title="Link to this definition">¶</a></dt>
<dd><p>これは WSGI アプリケーションを実行するための抽象ベースクラスです。それぞれのインスタンスは一つの HTTP リクエストを処理します。しかし原理上は複数のリクエスト用に再利用可能なサブクラスを作成することができます。</p>
<p><a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> インスタンスは外部から利用されるたった一つのメソッドを持ちます:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.run">
<span class="sig-name descname"><span class="pre">run</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">app</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.run" title="Link to this definition">¶</a></dt>
<dd><p>指定された WSGI アプリケーション、<em>app</em> を実行します。</p>
</dd></dl>

<p>その他のすべての <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> のメソッドはアプリケーション実行プロセスでこのメソッドから呼ばれます。したがって、それらは主にそのプロセスのカスタマイズのために存在しています。</p>
<p>以下のメソッドはサブクラスでオーバーライドされなければいけません:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler._write">
<span class="sig-name descname"><span class="pre">_write</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler._write" title="Link to this definition">¶</a></dt>
<dd><p>バイト列の <em>data</em> をクライアントへの転送用にバッファします。このメソッドが実際にデータを転送しても OK です: 下部システムが実際にそのような区別をしている場合に効率をより良くするために、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> は書き出しとフラッシュ操作を分けているからです。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler._flush">
<span class="sig-name descname"><span class="pre">_flush</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler._flush" title="Link to this definition">¶</a></dt>
<dd><p>バッファされたデータをクライアントに強制的に転送します。このメソッドは何もしなくても OK です（すなわち、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler._write" title="wsgiref.handlers.BaseHandler._write"><code class="xref py py-meth docutils literal notranslate"><span class="pre">_write()</span></code></a> が実際にデータを送る場合）。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.get_stdin">
<span class="sig-name descname"><span class="pre">get_stdin</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.get_stdin" title="Link to this definition">¶</a></dt>
<dd><p>Return an object compatible with <a class="reference internal" href="#wsgiref.types.InputStream" title="wsgiref.types.InputStream"><code class="xref py py-class docutils literal notranslate"><span class="pre">InputStream</span></code></a>
suitable for use as the <code class="docutils literal notranslate"><span class="pre">wsgi.input</span></code> of the
request currently being processed.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.get_stderr">
<span class="sig-name descname"><span class="pre">get_stderr</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.get_stderr" title="Link to this definition">¶</a></dt>
<dd><p>Return an object compatible with <a class="reference internal" href="#wsgiref.types.ErrorStream" title="wsgiref.types.ErrorStream"><code class="xref py py-class docutils literal notranslate"><span class="pre">ErrorStream</span></code></a>
suitable for use as the <code class="docutils literal notranslate"><span class="pre">wsgi.errors</span></code> of the
request currently being processed.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.add_cgi_vars">
<span class="sig-name descname"><span class="pre">add_cgi_vars</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.add_cgi_vars" title="Link to this definition">¶</a></dt>
<dd><p>現在のリクエストの CGI 変数を <code class="xref py py-attr docutils literal notranslate"><span class="pre">environ</span></code> 属性に追加します。</p>
</dd></dl>

<p>オーバーライドされることの多いメソッド及び属性を以下に挙げます。しかし、このリストは単にサマリであり、オーバーライド可能なすべてのメソッドは含んでいません。カスタマイズした <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> サブクラスを作成しようとする前に docstring やソースコードでさらなる情報を調べてください。</p>
<p>WSGI 環境のカスタマイズのための属性とメソッド:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.wsgi_multithread">
<span class="sig-name descname"><span class="pre">wsgi_multithread</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.wsgi_multithread" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">wsgi.multithread</span></code> 環境変数で使われる値。 <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> ではデフォルトが true ですが、別のサブクラスではデフォルトで（またはコンストラクタによって設定されて）異なる値を持つことがあります。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.wsgi_multiprocess">
<span class="sig-name descname"><span class="pre">wsgi_multiprocess</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.wsgi_multiprocess" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">wsgi.multiprocess</span></code> 環境変数で使われる値。 <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> ではデフォルトが true ですが、別のサブクラスではデフォルトで（またはコンストラクタによって設定されて）異なる値を持つことがあります。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.wsgi_run_once">
<span class="sig-name descname"><span class="pre">wsgi_run_once</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.wsgi_run_once" title="Link to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">wsgi.run_once</span></code> 環境変数で使われる値。 <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> ではデフォルトが false ですが、 <a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> はデフォルトでこれを true に設定します。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.os_environ">
<span class="sig-name descname"><span class="pre">os_environ</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.os_environ" title="Link to this definition">¶</a></dt>
<dd><p>すべてのリクエストの WSGI 環境に含まれるデフォルトの環境変数。デフォルトでは <a class="reference internal" href="#module-wsgiref.handlers" title="wsgiref.handlers: WSGI server/gateway base classes."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code></a> がインポートされた時点の <code class="docutils literal notranslate"><span class="pre">os.environ</span></code> のコピーですが、サブクラスはクラスまたはインスタンスレベルでそれら自身のものを作ることができます。デフォルト値は複数のクラスとインスタンスで共有されるため、この辞書は読み出し専用と考えるべきだという点に注意してください。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.server_software">
<span class="sig-name descname"><span class="pre">server_software</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.server_software" title="Link to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#wsgiref.handlers.BaseHandler.origin_server" title="wsgiref.handlers.BaseHandler.origin_server"><code class="xref py py-attr docutils literal notranslate"><span class="pre">origin_server</span></code></a> 属性が設定されている場合、この属性の値がデフォルトの <code class="docutils literal notranslate"><span class="pre">SERVER_SOFTWARE</span></code> WSGI 環境変数の設定や HTTP レスポンス中のデフォルトの <code class="docutils literal notranslate"><span class="pre">Server:</span></code> ヘッダの設定に使われます。これは (<a class="reference internal" href="#wsgiref.handlers.BaseCGIHandler" title="wsgiref.handlers.BaseCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseCGIHandler</span></code></a> や <a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> のような) HTTP オリジンサーバでないハンドラでは無視されます。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">バージョン 3.3 で変更: </span>&quot;Python&quot; という語は &quot;CPython&quot; や &quot;Jython&quot; などのような個別実装の語に置き換えられました。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.get_scheme">
<span class="sig-name descname"><span class="pre">get_scheme</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.get_scheme" title="Link to this definition">¶</a></dt>
<dd><p>現在のリクエストで使われている URL スキームを返します。デフォルト実装は <a class="reference internal" href="#module-wsgiref.util" title="wsgiref.util: WSGI environment utilities."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code></a> の <code class="xref py py-func docutils literal notranslate"><span class="pre">guess_scheme()</span></code> を使い、現在のリクエストの <code class="xref py py-attr docutils literal notranslate"><span class="pre">environ</span></code> 変数に基づいてスキームが&quot;http&quot; か &quot;https&quot; かを推測します。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.setup_environ">
<span class="sig-name descname"><span class="pre">setup_environ</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.setup_environ" title="Link to this definition">¶</a></dt>
<dd><p><code class="xref py py-attr docutils literal notranslate"><span class="pre">environ</span></code> 属性を、フル実装 (fully populated) の WSGI 環境に設定します。デフォルトの実装は、上記すべてのメソッドと属性、加えて <a class="reference internal" href="#wsgiref.handlers.BaseHandler.get_stdin" title="wsgiref.handlers.BaseHandler.get_stdin"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_stdin()</span></code></a> 、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler.get_stderr" title="wsgiref.handlers.BaseHandler.get_stderr"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_stderr()</span></code></a> 、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler.add_cgi_vars" title="wsgiref.handlers.BaseHandler.add_cgi_vars"><code class="xref py py-meth docutils literal notranslate"><span class="pre">add_cgi_vars()</span></code></a> メソッドと <a class="reference internal" href="#wsgiref.handlers.BaseHandler.wsgi_file_wrapper" title="wsgiref.handlers.BaseHandler.wsgi_file_wrapper"><code class="xref py py-attr docutils literal notranslate"><span class="pre">wsgi_file_wrapper</span></code></a> 属性を利用します。これは、キーが存在せず、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler.origin_server" title="wsgiref.handlers.BaseHandler.origin_server"><code class="xref py py-attr docutils literal notranslate"><span class="pre">origin_server</span></code></a> 属性が true 値で <a class="reference internal" href="#wsgiref.handlers.BaseHandler.server_software" title="wsgiref.handlers.BaseHandler.server_software"><code class="xref py py-attr docutils literal notranslate"><span class="pre">server_software</span></code></a> 属性も設定されている場合に <code class="docutils literal notranslate"><span class="pre">SERVER_SOFTWARE</span></code> を挿入します。</p>
</dd></dl>

<p>例外処理のカスタマイズのためのメソッドと属性:</p>
<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.log_exception">
<span class="sig-name descname"><span class="pre">log_exception</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">exc_info</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.log_exception" title="Link to this definition">¶</a></dt>
<dd><p><em>exc_info</em> タプルをサーバログに記録します。<em>exc_info</em> は <code class="docutils literal notranslate"><span class="pre">(type,</span> <span class="pre">value,</span> <span class="pre">traceback)</span></code> のタプルです。デフォルトの実装は単純にトレースバックをリクエストの <code class="docutils literal notranslate"><span class="pre">wsgi.errors</span></code> ストリームに書き出してフラッシュします。サブクラスはこのメソッドをオーバーライドしてフォーマットを変更したり出力先の変更、トレースバックを管理者にメールしたりその他適切と思われるいかなるアクションも取ることができます。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.traceback_limit">
<span class="sig-name descname"><span class="pre">traceback_limit</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.traceback_limit" title="Link to this definition">¶</a></dt>
<dd><p>デフォルトの <a class="reference internal" href="#wsgiref.handlers.BaseHandler.log_exception" title="wsgiref.handlers.BaseHandler.log_exception"><code class="xref py py-meth docutils literal notranslate"><span class="pre">log_exception()</span></code></a> メソッドで出力されるトレースバック出力に含まれる最大のフレーム数です。 <code class="docutils literal notranslate"><span class="pre">None</span></code> ならば、すべてのフレームが含まれます。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.error_output">
<span class="sig-name descname"><span class="pre">error_output</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">environ</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_response</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.error_output" title="Link to this definition">¶</a></dt>
<dd><p>このメソッドは、ユーザに対してエラーページを出力する WSGI アプリケーションです。これはクライアントにヘッダが送出される前にエラーが発生した場合にのみ呼び出されます。</p>
<p>このメソッドは <code class="docutils literal notranslate"><span class="pre">sys.exception()</span></code> を使って現在のエラーにアクセスでき、その情報はこれを呼ぶときに <em>start_response</em> に渡すべきです (<span class="target" id="index-47"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> の &quot;Error Handling&quot; セクションに記述があります)。</p>
<p>デフォルト実装は単に <a class="reference internal" href="#wsgiref.handlers.BaseHandler.error_status" title="wsgiref.handlers.BaseHandler.error_status"><code class="xref py py-attr docutils literal notranslate"><span class="pre">error_status</span></code></a> 、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler.error_headers" title="wsgiref.handlers.BaseHandler.error_headers"><code class="xref py py-attr docutils literal notranslate"><span class="pre">error_headers</span></code></a> 、 <a class="reference internal" href="#wsgiref.handlers.BaseHandler.error_body" title="wsgiref.handlers.BaseHandler.error_body"><code class="xref py py-attr docutils literal notranslate"><span class="pre">error_body</span></code></a> 属性を出力ページの生成に使います。サブクラスではこれをオーバーライドしてもっと動的なエラー出力をすることができます。</p>
<p>しかし、セキュリティの観点からは診断をあらゆるユーザに吐き出すことは推奨されないことに気をつけてください; 理想的には、診断的な出力を有効にするには何らかの特別なことをする必要があるようにすべきで、これがデフォルト実装では何も含まれていない理由です。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.error_status">
<span class="sig-name descname"><span class="pre">error_status</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.error_status" title="Link to this definition">¶</a></dt>
<dd><p>エラーレスポンスで使われる HTTP ステータスです。これは <span class="target" id="index-48"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で定義されているステータス文字列です; デフォルトは 500 コードとメッセージです。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.error_headers">
<span class="sig-name descname"><span class="pre">error_headers</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.error_headers" title="Link to this definition">¶</a></dt>
<dd><p>エラーレスポンスで使われる HTTP ヘッダです。これは <span class="target" id="index-49"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> で述べられているような、 WSGI レスポンスヘッダ (<code class="docutils literal notranslate"><span class="pre">(name,</span> <span class="pre">value)</span></code> タプル) のリストであるべきです。デフォルトのリストはコンテントタイプを <code class="docutils literal notranslate"><span class="pre">text/plain</span></code> にセットしているだけです。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.error_body">
<span class="sig-name descname"><span class="pre">error_body</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.error_body" title="Link to this definition">¶</a></dt>
<dd><p>エラーレスポンスボディ。これは HTTP レスポンスのボディバイト文字列であるべきです。これはデフォルトではプレーンテキストで &quot;A server error occurred.  Please contact the administrator.&quot; です。</p>
</dd></dl>

<p><span class="target" id="index-50"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> の &quot;オプションのプラットフォーム固有のファイルハンドリング&quot; 機能のためのメソッドと属性:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.wsgi_file_wrapper">
<span class="sig-name descname"><span class="pre">wsgi_file_wrapper</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.wsgi_file_wrapper" title="Link to this definition">¶</a></dt>
<dd><p>A <code class="docutils literal notranslate"><span class="pre">wsgi.file_wrapper</span></code> factory, compatible with
<a class="reference internal" href="#wsgiref.types.FileWrapper" title="wsgiref.types.FileWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">wsgiref.types.FileWrapper</span></code></a>, or <code class="docutils literal notranslate"><span class="pre">None</span></code>.  The default value
of this attribute is the <a class="reference internal" href="#wsgiref.util.FileWrapper" title="wsgiref.util.FileWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">wsgiref.util.FileWrapper</span></code></a> class.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.sendfile">
<span class="sig-name descname"><span class="pre">sendfile</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.sendfile" title="Link to this definition">¶</a></dt>
<dd><p>オーバーライドしてプラットフォーム固有のファイル転送を実装します。このメソッドはアプリケーションの戻り値が <a class="reference internal" href="#wsgiref.handlers.BaseHandler.wsgi_file_wrapper" title="wsgiref.handlers.BaseHandler.wsgi_file_wrapper"><code class="xref py py-attr docutils literal notranslate"><span class="pre">wsgi_file_wrapper</span></code></a> 属性で指定されたクラスのインスタンスの場合にのみ呼ばれます。これはファイルの転送が成功できた場合には true を返して、デフォルトの転送コードが実行されないようにするべきです。このデフォルトの実装は単に false 値を返します。</p>
</dd></dl>

<p>その他のメソッドと属性:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.origin_server">
<span class="sig-name descname"><span class="pre">origin_server</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.origin_server" title="Link to this definition">¶</a></dt>
<dd><p>この属性はハンドラの <a class="reference internal" href="#wsgiref.handlers.BaseHandler._write" title="wsgiref.handlers.BaseHandler._write"><code class="xref py py-meth docutils literal notranslate"><span class="pre">_write()</span></code></a> と <a class="reference internal" href="#wsgiref.handlers.BaseHandler._flush" title="wsgiref.handlers.BaseHandler._flush"><code class="xref py py-meth docutils literal notranslate"><span class="pre">_flush()</span></code></a> が、特別に <code class="docutils literal notranslate"><span class="pre">Status:</span></code> ヘッダに HTTP ステータスを求めるような CGI 風のゲートウェイプロトコル経由でなく、クライアントと直接通信をするような場合には true 値に設定されているべきです。</p>
<p>この属性のデフォルト値は <a class="reference internal" href="#wsgiref.handlers.BaseHandler" title="wsgiref.handlers.BaseHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseHandler</span></code></a> では true ですが、 <a class="reference internal" href="#wsgiref.handlers.BaseCGIHandler" title="wsgiref.handlers.BaseCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseCGIHandler</span></code></a> と <a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> では false です。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="wsgiref.handlers.BaseHandler.http_version">
<span class="sig-name descname"><span class="pre">http_version</span></span><a class="headerlink" href="#wsgiref.handlers.BaseHandler.http_version" title="Link to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#wsgiref.handlers.BaseHandler.origin_server" title="wsgiref.handlers.BaseHandler.origin_server"><code class="xref py py-attr docutils literal notranslate"><span class="pre">origin_server</span></code></a> が true の場合、この文字列属性はクライアントへのレスポンスセットの HTTP バージョンの設定に使われます。デフォルトは <code class="docutils literal notranslate"><span class="pre">&quot;1.0&quot;</span></code> です。</p>
</dd></dl>

</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="wsgiref.handlers.read_environ">
<span class="sig-prename descclassname"><span class="pre">wsgiref.handlers.</span></span><span class="sig-name descname"><span class="pre">read_environ</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#wsgiref.handlers.read_environ" title="Link to this definition">¶</a></dt>
<dd><p>Transcode CGI variables from <code class="docutils literal notranslate"><span class="pre">os.environ</span></code> to <span class="target" id="index-16"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a> &quot;bytes in unicode&quot;
strings, returning a new dictionary.  This function is used by
<a class="reference internal" href="#wsgiref.handlers.CGIHandler" title="wsgiref.handlers.CGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">CGIHandler</span></code></a> and <a class="reference internal" href="#wsgiref.handlers.IISCGIHandler" title="wsgiref.handlers.IISCGIHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">IISCGIHandler</span></code></a> in place of directly using
<code class="docutils literal notranslate"><span class="pre">os.environ</span></code>, which is not necessarily WSGI-compliant on all platforms
and web servers using Python 3 -- specifically, ones where the OS's
actual environment is Unicode (i.e. Windows), or ones where the environment
is bytes, but the system encoding used by Python to decode it is anything
other than ISO-8859-1 (e.g. Unix systems using UTF-8).</p>
<p>If you are implementing a CGI-based handler of your own, you probably want
to use this routine instead of just copying values out of <code class="docutils literal notranslate"><span class="pre">os.environ</span></code>
directly.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2.</span></p>
</div>
</dd></dl>

</section>
<section id="module-wsgiref.types">
<span id="wsgiref-types-wsgi-types-for-static-type-checking"></span><h2><a class="reference internal" href="#module-wsgiref.types" title="wsgiref.types: WSGI types for static type checking"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.types</span></code></a> -- WSGI types for static type checking<a class="headerlink" href="#module-wsgiref.types" title="Link to this heading">¶</a></h2>
<p>This module provides various types for static type checking as described
in <span class="target" id="index-17"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a>.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.11.</span></p>
</div>
<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.types.StartResponse">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">StartResponse</span></span><a class="headerlink" href="#wsgiref.types.StartResponse" title="Link to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="typing.html#typing.Protocol" title="typing.Protocol"><code class="xref py py-class docutils literal notranslate"><span class="pre">typing.Protocol</span></code></a> describing <a class="reference external" href="https://peps.python.org/pep-3333/#the-start-response-callable">start_response()</a>
callables (<span class="target" id="index-18"></span><a class="pep reference external" href="https://peps.python.org/pep-3333/"><strong>PEP 3333</strong></a>).</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="wsgiref.types.WSGIEnvironment">
<span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">WSGIEnvironment</span></span><a class="headerlink" href="#wsgiref.types.WSGIEnvironment" title="Link to this definition">¶</a></dt>
<dd><p>A type alias describing a WSGI environment dictionary.</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="wsgiref.types.WSGIApplication">
<span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">WSGIApplication</span></span><a class="headerlink" href="#wsgiref.types.WSGIApplication" title="Link to this definition">¶</a></dt>
<dd><p>A type alias describing a WSGI application callable.</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.types.InputStream">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">InputStream</span></span><a class="headerlink" href="#wsgiref.types.InputStream" title="Link to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="typing.html#typing.Protocol" title="typing.Protocol"><code class="xref py py-class docutils literal notranslate"><span class="pre">typing.Protocol</span></code></a> describing a <a class="reference external" href="https://peps.python.org/pep-3333/#input-and-error-streams">WSGI Input Stream</a>.</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.types.ErrorStream">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">ErrorStream</span></span><a class="headerlink" href="#wsgiref.types.ErrorStream" title="Link to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="typing.html#typing.Protocol" title="typing.Protocol"><code class="xref py py-class docutils literal notranslate"><span class="pre">typing.Protocol</span></code></a> describing a <a class="reference external" href="https://peps.python.org/pep-3333/#input-and-error-streams">WSGI Error Stream</a>.</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="wsgiref.types.FileWrapper">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">wsgiref.types.</span></span><span class="sig-name descname"><span class="pre">FileWrapper</span></span><a class="headerlink" href="#wsgiref.types.FileWrapper" title="Link to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="typing.html#typing.Protocol" title="typing.Protocol"><code class="xref py py-class docutils literal notranslate"><span class="pre">typing.Protocol</span></code></a> describing a <a class="reference external" href="https://peps.python.org/pep-3333/#optional-platform-specific-file-handling">file wrapper</a>.
See <a class="reference internal" href="#wsgiref.util.FileWrapper" title="wsgiref.util.FileWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">wsgiref.util.FileWrapper</span></code></a> for a concrete implementation of this
protocol.</p>
</dd></dl>

</section>
<section id="examples">
<h2>使用例<a class="headerlink" href="#examples" title="Link to this heading">¶</a></h2>
<p>これは動作する &quot;Hello World&quot; WSGIアプリケーションです:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Every WSGI application must have an application object - a callable</span>
<span class="sd">object that accepts two arguments. For that purpose, we&#39;re going to</span>
<span class="sd">use a function (note that you&#39;re not limited to a function, you can</span>
<span class="sd">use a class for example). The first argument passed to the function</span>
<span class="sd">is a dictionary containing CGI-style environment variables and the</span>
<span class="sd">second variable is the callable object.</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">from</span> <span class="nn">wsgiref.simple_server</span> <span class="kn">import</span> <span class="n">make_server</span>


<span class="k">def</span> <span class="nf">hello_world_app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span>
    <span class="n">status</span> <span class="o">=</span> <span class="s2">&quot;200 OK&quot;</span>  <span class="c1"># HTTP Status</span>
    <span class="n">headers</span> <span class="o">=</span> <span class="p">[(</span><span class="s2">&quot;Content-type&quot;</span><span class="p">,</span> <span class="s2">&quot;text/plain; charset=utf-8&quot;</span><span class="p">)]</span>  <span class="c1"># HTTP Headers</span>
    <span class="n">start_response</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>

    <span class="c1"># The returned object is going to be printed</span>
    <span class="k">return</span> <span class="p">[</span><span class="sa">b</span><span class="s2">&quot;Hello World&quot;</span><span class="p">]</span>

<span class="k">with</span> <span class="n">make_server</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">,</span> <span class="n">hello_world_app</span><span class="p">)</span> <span class="k">as</span> <span class="n">httpd</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Serving on port 8000...&quot;</span><span class="p">)</span>

    <span class="c1"># Serve until process is killed</span>
    <span class="n">httpd</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</pre></div>
</div>
<p>Example of a WSGI application serving the current directory, accept optional
directory and port number (default: 8000) on the command line:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Small wsgiref based web server. Takes a path to serve from and an</span>
<span class="sd">optional port number (defaults to 8000), then tries to serve files.</span>
<span class="sd">MIME types are guessed from the file names, 404 errors are raised</span>
<span class="sd">if the file is not found.</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">import</span> <span class="nn">mimetypes</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">from</span> <span class="nn">wsgiref</span> <span class="kn">import</span> <span class="n">simple_server</span><span class="p">,</span> <span class="n">util</span>


<span class="k">def</span> <span class="nf">app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span> <span class="n">respond</span><span class="p">):</span>
    <span class="c1"># Get the file name and MIME type</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">environ</span><span class="p">[</span><span class="s2">&quot;PATH_INFO&quot;</span><span class="p">][</span><span class="mi">1</span><span class="p">:])</span>
    <span class="k">if</span> <span class="s2">&quot;.&quot;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">fn</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">sep</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
        <span class="n">fn</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">fn</span><span class="p">,</span> <span class="s2">&quot;index.html&quot;</span><span class="p">)</span>
    <span class="n">mime_type</span> <span class="o">=</span> <span class="n">mimetypes</span><span class="o">.</span><span class="n">guess_type</span><span class="p">(</span><span class="n">fn</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

    <span class="c1"># Return 200 OK if file exists, otherwise 404 Not Found</span>
    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">fn</span><span class="p">):</span>
        <span class="n">respond</span><span class="p">(</span><span class="s2">&quot;200 OK&quot;</span><span class="p">,</span> <span class="p">[(</span><span class="s2">&quot;Content-Type&quot;</span><span class="p">,</span> <span class="n">mime_type</span><span class="p">)])</span>
        <span class="k">return</span> <span class="n">util</span><span class="o">.</span><span class="n">FileWrapper</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">fn</span><span class="p">,</span> <span class="s2">&quot;rb&quot;</span><span class="p">))</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">respond</span><span class="p">(</span><span class="s2">&quot;404 Not Found&quot;</span><span class="p">,</span> <span class="p">[(</span><span class="s2">&quot;Content-Type&quot;</span><span class="p">,</span> <span class="s2">&quot;text/plain&quot;</span><span class="p">)])</span>
        <span class="k">return</span> <span class="p">[</span><span class="sa">b</span><span class="s2">&quot;not found&quot;</span><span class="p">]</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="c1"># Get the path and port from command-line arguments</span>
    <span class="n">path</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">()</span>
    <span class="n">port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="k">else</span> <span class="mi">8000</span>

    <span class="c1"># Make and start the server until control-c</span>
    <span class="n">httpd</span> <span class="o">=</span> <span class="n">simple_server</span><span class="o">.</span><span class="n">make_server</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="n">app</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Serving </span><span class="si">{</span><span class="n">path</span><span class="si">}</span><span class="s2"> on port </span><span class="si">{</span><span class="n">port</span><span class="si">}</span><span class="s2">, control-C to stop&quot;</span><span class="p">)</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">httpd</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
    <span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Shutting down.&quot;</span><span class="p">)</span>
        <span class="n">httpd</span><span class="o">.</span><span class="n">server_close</span><span class="p">()</span>
</pre></div>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
        </div>
      </div>
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
  <div>
    <h3><a href="../contents.html">目次</a></h3>
    <ul>
<li><a class="reference internal" href="#"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code> --- WSGI ユーティリティとリファレンス実装</a><ul>
<li><a class="reference internal" href="#module-wsgiref.util"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.util</span></code> -- WSGI 環境のユーティリティ</a></li>
<li><a class="reference internal" href="#module-wsgiref.headers"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.headers</span></code> -- WSGI レスポンスヘッダツール群</a></li>
<li><a class="reference internal" href="#module-wsgiref.simple_server"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.simple_server</span></code> -- シンプルな WSGI HTTP サーバ</a></li>
<li><a class="reference internal" href="#module-wsgiref.validate"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.validate</span></code> --- WSGI 準拠チェッカー</a></li>
<li><a class="reference internal" href="#module-wsgiref.handlers"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.handlers</span></code> -- サーバ／ゲートウェイのベースクラス</a></li>
<li><a class="reference internal" href="#module-wsgiref.types"><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref.types</span></code> -- WSGI types for static type checking</a></li>
<li><a class="reference internal" href="#examples">使用例</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>前のトピックへ</h4>
    <p class="topless"><a href="webbrowser.html"
                          title="前の章へ"><code class="xref py py-mod docutils literal notranslate"><span class="pre">webbrowser</span></code> --- 便利なウェブブラウザーコントローラー</a></p>
  </div>
  <div>
    <h4>次のトピックへ</h4>
    <p class="topless"><a href="urllib.html"
                          title="次の章へ"><code class="xref py py-mod docutils literal notranslate"><span class="pre">urllib</span></code> --- URL を扱うモジュール群</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>このページ</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">バグ報告</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/wsgiref.rst"
            rel="nofollow">ソースの表示
        </a>
      </li>
    </ul>
  </div>
        </div>
<div id="sidebarbutton" title="サイドバーをたたむ">
<span>«</span>
</div>

      </div>
      <div class="clearer"></div>
    </div>  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>ナビゲーション</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="総合索引"
             >索引</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Pythonモジュール索引"
             >モジュール</a> |</li>
        <li class="right" >
          <a href="urllib.html" title="urllib --- URL を扱うモジュール群"
             >次へ</a> |</li>
        <li class="right" >
          <a href="webbrowser.html" title="webbrowser --- 便利なウェブブラウザーコントローラー"
             >前へ</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >Python 標準ライブラリ</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="internet.html" >インターネットプロトコルとサポート</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href=""><code class="xref py py-mod docutils literal notranslate"><span class="pre">wsgiref</span></code> --- WSGI ユーティリティとリファレンス実装</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="クイック検索" aria-label="クイック検索" type="search" name="q" id="search-box" />
          <input type="submit" value="検索" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>  
    <div class="footer">
    &copy; 
      <a href="../copyright.html">
    
    Copyright
    
      </a>
     2001-2024, Python Software Foundation.
    <br />
    This page is licensed under the Python Software Foundation License Version 2.
    <br />
    Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.
    <br />
    
      See <a href="/license.html">History and License</a> for more information.<br />
    
    
    <br />

    The Python Software Foundation is a non-profit corporation.
<a href="https://www.python.org/psf/donations/">Please donate.</a>
<br />
    <br />
      最終更新: Jun 11, 2024 (04:44 UTC)
    
      <a href="/bugs.html">Found a bug</a>?
    
    <br />

    Created using <a href="https://www.sphinx-doc.org/">Sphinx</a> 7.3.7.
    </div>

    <script type="text/javascript" src="../_static/switchers.js"></script>
  </body>
</html>