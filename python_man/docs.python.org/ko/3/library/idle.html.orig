<!DOCTYPE html>

<html lang="ko" data-content_root="../">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="IDLE" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/idle.html" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="소스 코드: Lib/idlelib/ IDLE은 파이썬의 통합 개발 및 학습 환경입니다. IDLE에는 다음과 같은 기능이 있습니다: 크로스 플랫폼: 윈도우, 유닉스 및 macOS에서 거의 같게 작동합니다, 코드 입력, 출력 및 에러 메시지를 채색하는 파이썬 셸 창 (대화식 인터프리터), 다중 실행 취소, 파이썬 색상 지정, 스마트 들여쓰기, 호출 팁, ..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="소스 코드: Lib/idlelib/ IDLE은 파이썬의 통합 개발 및 학습 환경입니다. IDLE에는 다음과 같은 기능이 있습니다: 크로스 플랫폼: 윈도우, 유닉스 및 macOS에서 거의 같게 작동합니다, 코드 입력, 출력 및 에러 메시지를 채색하는 파이썬 셸 창 (대화식 인터프리터), 다중 실행 취소, 파이썬 색상 지정, 스마트 들여쓰기, 호출 팁, ..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>IDLE &#8212; Python 3.12.4 문서</title><meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=80d5e7a1" />
    <link rel="stylesheet" type="text/css" href="../_static/pydoctheme.css?v=bb723527" />
    <link id="pygments_dark_css" media="(prefers-color-scheme: dark)" rel="stylesheet" type="text/css" href="../_static/pygments_dark.css?v=b20cc3f5" />
    
    <script src="../_static/documentation_options.js?v=3050f571"></script>
    <script src="../_static/doctools.js?v=9a2dae69"></script>
    <script src="../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../_static/translations.js?v=b5f768d8"></script>
    
    <script src="../_static/sidebar.js"></script>
    
    <link rel="search" type="application/opensearchdescription+xml"
          title="Python 3.12.4 문서에서 찾기"
          href="../_static/opensearch.xml"/>
    <link rel="author" title="이 문서 정보" href="../about.html" />
    <link rel="index" title="색인" href="../genindex.html" />
    <link rel="search" title="검색" href="../search.html" />
    <link rel="copyright" title="저작권" href="../copyright.html" />
    <link rel="next" title="개발 도구" href="development.html" />
    <link rel="prev" title="tkinter.tix — Extension widgets for Tk" href="tkinter.tix.html" />
    
      <script defer data-domain="docs.python.org" src="https://plausible.io/js/script.js"></script>
    
    <link rel="canonical" href="https://docs.python.org/3/library/idle.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
<link rel="stylesheet" href="../_static/pydoctheme_dark.css" media="(prefers-color-scheme: dark)" id="pydoctheme_dark_css">
    <link rel="shortcut icon" type="image/png" href="../_static/py.svg" />
            <script type="text/javascript" src="../_static/copybutton.js"></script>
            <script type="text/javascript" src="../_static/menu.js"></script>
            <script type="text/javascript" src="../_static/search-focus.js"></script>
            <script type="text/javascript" src="../_static/themetoggle.js"></script> 
<meta name="readthedocs-addons-api-version" content="1">
<script type="text/javascript">
 function onSwitch(event) {
     const option = event.target.selectedIndex;
     const item = event.target.options[option];
     window.location.href = item.dataset.url;
 }

 document.addEventListener("readthedocs-addons-data-ready", function(event) {
   const config = event.detail.data()

   // Add some mocked hardcoded versions pointing to the official
   // documentation while migrating to Read the Docs.
   // These are only for testing purposes.
   // TODO: remove them when managing all the versions on Read the Docs,
   // since all the "active, built and not hidden" versions will be shown automatically.
   let versions = config.versions.active.concat([
       {
           slug: "dev (3.13)",
           urls: {
               documentation: "https://docs.python.org/3.13/",
           }
       },
       {
           slug: "3.12",
           urls: {
               documentation: "https://docs.python.org/3.12/",
           }
       },
       {
           slug: "3.11",
           urls: {
               documentation: "https://docs.python.org/3.11/",
           }
       },
   ]);

   const versionSelect = `
   <select id="version_select">
   ${ versions.map(
       (version) => `
       <option
           value="${ version.slug }"
           ${ config.versions.current.slug === version.slug ? 'selected="selected"' : '' }
           data-url="${ version.urls.documentation }">
           ${ version.slug }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Prepend the current language to the options on the selector
   let languages = config.projects.translations.concat(config.projects.current);
   languages = languages.sort((a, b) => a.language.name.localeCompare(b.language.name));

   const languageSelect = `
   <select id="language_select">
   ${ languages.map(
       (translation) => `
       <option
           value="${ translation.slug }"
           ${ config.projects.current.slug === translation.slug ? 'selected="selected"' : '' }
           data-url="${ translation.urls.documentation }">
           ${ translation.language.name }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Query all the placeholders because there are different ones for Desktop/Mobile
   const versionPlaceholders = document.querySelectorAll(".version_switcher_placeholder");
   for (placeholder of versionPlaceholders) {
       placeholder.innerHTML = versionSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }

   const languagePlaceholders = document.querySelectorAll(".language_switcher_placeholder");
   for (placeholder of languagePlaceholders) {
       placeholder.innerHTML = languageSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }
 });
</script>

  </head>
<body>
<div class="mobile-nav">
    <input type="checkbox" id="menuToggler" class="toggler__input" aria-controls="navigation"
           aria-pressed="false" aria-expanded="false" role="button" aria-label="Menu" />
    <nav class="nav-content" role="navigation">
        <label for="menuToggler" class="toggler__label">
            <span></span>
        </label>
        <span class="nav-items-wrapper">
            <a href="https://www.python.org/" class="nav-logo">
                <img src="../_static/py.svg" alt="Python logo"/>
            </a>
            <span class="version_switcher_placeholder"></span>
            <form role="search" class="search" action="../search.html" method="get">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" class="search-icon">
                    <path fill-rule="nonzero" fill="currentColor" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path>
                </svg>
                <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" />
                <input type="submit" value="이동"/>
            </form>
        </span>
    </nav>
    <div class="menu-wrapper">
        <nav class="menu" role="navigation" aria-label="main navigation">
            <div class="language_switcher_placeholder"></div>
            
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label>
  <div>
    <h3><a href="../contents.html">목차</a></h3>
    <ul>
<li><a class="reference internal" href="#">IDLE</a><ul>
<li><a class="reference internal" href="#menus">메뉴</a><ul>
<li><a class="reference internal" href="#file-menu-shell-and-editor">File 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#edit-menu-shell-and-editor">Edit 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#format-menu-editor-window-only">Format 메뉴 (편집기 창 전용)</a></li>
<li><a class="reference internal" href="#run-menu-editor-window-only">Run 메뉴 (편집기 창 전용)</a></li>
<li><a class="reference internal" href="#shell-menu-shell-window-only">Shell 메뉴 (셸 창 전용)</a></li>
<li><a class="reference internal" href="#debug-menu-shell-window-only">Debug 메뉴 (셸 창 전용)</a></li>
<li><a class="reference internal" href="#options-menu-shell-and-editor">Options 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#window-menu-shell-and-editor">Window 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#help-menu-shell-and-editor">Help 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#context-menus">Context menus</a></li>
</ul>
</li>
<li><a class="reference internal" href="#editing-and-navigation">Editing and Navigation</a><ul>
<li><a class="reference internal" href="#editor-windows">편집기 창</a></li>
<li><a class="reference internal" href="#key-bindings">키 바인딩</a></li>
<li><a class="reference internal" href="#automatic-indentation">자동 들여쓰기</a></li>
<li><a class="reference internal" href="#search-and-replace">Search and Replace</a></li>
<li><a class="reference internal" href="#completions">완성</a></li>
<li><a class="reference internal" href="#calltips">콜팁</a></li>
<li><a class="reference internal" href="#code-context">코드 컨텍스트</a></li>
<li><a class="reference internal" href="#shell-window">Shell window</a></li>
<li><a class="reference internal" href="#text-colors">텍스트 색상</a></li>
</ul>
</li>
<li><a class="reference internal" href="#startup-and-code-execution">Startup and Code Execution</a><ul>
<li><a class="reference internal" href="#command-line-usage">명령 줄 사용법</a></li>
<li><a class="reference internal" href="#startup-failure">시작 실패</a></li>
<li><a class="reference internal" href="#running-user-code">사용자 코드 실행하기</a></li>
<li><a class="reference internal" href="#user-output-in-shell">셸의 사용자 출력</a></li>
<li><a class="reference internal" href="#developing-tkinter-applications">tkinter 응용 프로그램 개발하기</a></li>
<li><a class="reference internal" href="#running-without-a-subprocess">서브 프로세스 없이 실행하기</a></li>
</ul>
</li>
<li><a class="reference internal" href="#help-and-preferences">Help and Preferences</a><ul>
<li><a class="reference internal" href="#help-sources">도움말 소스</a></li>
<li><a class="reference internal" href="#setting-preferences">환경 설정</a></li>
<li><a class="reference internal" href="#idle-on-macos">macOS의 IDLE</a></li>
<li><a class="reference internal" href="#extensions">확장</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-idlelib">idlelib</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>이전 항목</h4>
    <p class="topless"><a href="tkinter.tix.html"
                          title="이전 장"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.tix</span></code> — Extension widgets for Tk</a></p>
  </div>
  <div>
    <h4>다음 항목</h4>
    <p class="topless"><a href="development.html"
                          title="다음 장">개발 도구</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>이 페이지</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">버그 보고하기</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/idle.rst"
            rel="nofollow">소스 보기
        </a>
      </li>
    </ul>
  </div>
        </nav>
    </div>
</div>

  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>탐색</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="일반 색인"
             accesskey="I">색인</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Python 모듈 목록"
             >모듈</a> |</li>
        <li class="right" >
          <a href="development.html" title="개발 도구"
             accesskey="N">다음</a> |</li>
        <li class="right" >
          <a href="tkinter.tix.html" title="tkinter.tix — Extension widgets for Tk"
             accesskey="P">이전</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >파이썬 표준 라이브러리</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="tk.html" accesskey="U">Tk를 사용한 그래픽 사용자 인터페이스</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href="">IDLE</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" id="search-box" />
          <input type="submit" value="이동" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>    

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <section id="idle">
<span id="id1"></span><h1>IDLE<a class="headerlink" href="#idle" title="Link to this heading">¶</a></h1>
<p><strong>소스 코드:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/idlelib/">Lib/idlelib/</a></p>
<hr class="docutils" id="index-0" />
<p>IDLE은 파이썬의 통합 개발 및 학습 환경입니다.</p>
<p>IDLE에는 다음과 같은 기능이 있습니다:</p>
<ul class="simple">
<li><p>크로스 플랫폼: 윈도우, 유닉스 및 macOS에서 거의 같게 작동합니다</p></li>
<li><p>코드 입력, 출력 및 에러 메시지를 채색하는 파이썬 셸 창 (대화식 인터프리터)</p></li>
<li><p>다중 실행 취소, 파이썬 색상 지정, 스마트 들여쓰기, 호출 팁, 자동 완성 및 기타 기능이 있는 다중 창 텍스트 편집기</p></li>
<li><p>모든 창 내에서 검색, 편집기 창 내에서 교체 및 여러 파일을 통한 검색 (grep)</p></li>
<li><p>지속적인 중단점(breakpoints), 스테핑(stepping) 및 전역과 지역 이름 공간 보기가 있는 디버거</p></li>
<li><p>구성, 브라우저 및 기타 대화 상자</p></li>
</ul>
<section id="menus">
<h2>메뉴<a class="headerlink" href="#menus" title="Link to this heading">¶</a></h2>
<p>IDLE에는 두 가지 메인 창 유형이 있습니다, 셸 창과 편집기 창. 여러 개의 편집기 창을 동시에 가질 수 있습니다. 윈도우와 리눅스에서는, 각각 자신의 최상위 메뉴가 있습니다. 아래에 설명된 각 메뉴는 어떤 창 유형과 관련되는지를 나타냅니다.</p>
<p>가령 Edit =&gt; Find in Files 에서 사용되는 것과 같은 출력 창은 편집기 창의 하위 유형입니다. 현재 같은 최상위 메뉴가 있지만, 기본 제목과 문맥 메뉴가 다릅니다.</p>
<p>macOS에는, 하나의 응용 프로그램 메뉴가 있습니다. 현재 선택된 창에 따라 동적으로 변경됩니다. IDLE 메뉴가 있으며, 아래 설명된 일부 항목은 Apple 지침에 따라 이동됩니다.</p>
<section id="file-menu-shell-and-editor">
<h3>File 메뉴 (셸과 편집기)<a class="headerlink" href="#file-menu-shell-and-editor" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>New File</dt><dd><p>새 파일 편집 창을 만듭니다.</p>
</dd>
<dt>Open…</dt><dd><p>열기 대화 상자로 기존 파일을 엽니다.</p>
</dd>
<dt>Open Module…</dt><dd><p>기존 모듈을 엽니다 (sys.path를 검색합니다).</p>
</dd>
<dt>Recent Files</dt><dd><p>최근 파일의 목록을 엽니다. 하나를 클릭하여 엽니다.</p>
</dd>
</dl>
<dl class="simple" id="index-1">
<dt>Module Browser</dt><dd><p>현재 편집기 파일의 함수, 클래스 및 메서드를 트리 구조로 표시합니다. 셸에서, 모듈을 먼저 여십시오.</p>
</dd>
<dt>Path Browser</dt><dd><p>sys.path 디렉터리, 모듈, 함수, 클래스 및 메서드를 트리 구조로 표시합니다.</p>
</dd>
<dt>Save</dt><dd><p>현재 창을 (있다면) 연관된 파일에 저장합니다. 열거나 마지막으로 저장한 이후에 변경된 창에는 창 제목 앞뒤에 * 가 있습니다. 연결된 파일이 없으면, 대신 Save As 를 수행합니다.</p>
</dd>
<dt>Save As…</dt><dd><p>Save the current window with a Save As dialog.  The file saved becomes the
new associated file for the window. (If your file namager is set to hide
extensions, the current extension will be omitted in the file name box.
If the new filename has no ‘.’, ‘.py’ and ‘.txt’ will be added for Python
and text files, except that on macOS Aqua,’.py’ is added for all files.)</p>
</dd>
<dt>Save Copy As…</dt><dd><p>Save the current window to different file without changing the associated
file.  (See Save As note above about filename extensions.)</p>
</dd>
<dt>Print Window</dt><dd><p>현재 창을 기본 프린터로 인쇄합니다.</p>
</dd>
<dt>Close Window</dt><dd><p>Close the current window (if an unsaved editor, ask to save; if an unsaved
Shell, ask to quit execution).  Calling <code class="docutils literal notranslate"><span class="pre">exit()</span></code> or <code class="docutils literal notranslate"><span class="pre">close()</span></code> in the Shell
window also closes Shell.  If this is the only window, also exit IDLE.</p>
</dd>
<dt>Exit IDLE</dt><dd><p>Close all windows and quit IDLE (ask to save unsaved edit windows).</p>
</dd>
</dl>
</section>
<section id="edit-menu-shell-and-editor">
<h3>Edit 메뉴 (셸과 편집기)<a class="headerlink" href="#edit-menu-shell-and-editor" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>Undo</dt><dd><p>현재 창에 대한 마지막 변경을 되돌립니다. 최대 1000개의 변경을 되돌릴 수 있습니다.</p>
</dd>
<dt>Redo</dt><dd><p>마지막으로 되돌린 변경을 현재 창에 다시 실행합니다.</p>
</dd>
<dt>Select All</dt><dd><p>현재 창의 전체 내용을 선택합니다.</p>
</dd>
<dt>Cut</dt><dd><p>선택 사항을 시스템 전체 클립 보드에 복사합니다; 그런 다음 선택을 삭제합니다.</p>
</dd>
<dt>Copy</dt><dd><p>선택 사항을 시스템 전체 클립 보드에 복사합니다.</p>
</dd>
<dt>Paste</dt><dd><p>시스템 전체 클립 보드의 내용을 현재 창에 삽입합니다.</p>
</dd>
</dl>
<p>클립 보드 기능은 문맥 메뉴에서도 사용할 수 있습니다.</p>
<dl class="simple">
<dt>Find…</dt><dd><p>많은 옵션이 제공되는 검색 대화 상자를 엽니다</p>
</dd>
<dt>Find Again</dt><dd><p>마지막 검색이 있으면 반복합니다.</p>
</dd>
<dt>Find Selection</dt><dd><p>현재 선택된 문자열이 있으면 검색합니다.</p>
</dd>
<dt>Find in Files…</dt><dd><p>파일 검색 대화 상자를 엽니다. 새로운 출력 창에 결과를 넣습니다.</p>
</dd>
<dt>Replace…</dt><dd><p>검색과 치환 대화 상자를 엽니다.</p>
</dd>
<dt>Go to Line</dt><dd><p>요청한 줄의 시작 부분으로 커서를 이동하고 해당 줄을 표시합니다. 파일 끝을 지나는 요청은 파일의 끝으로 갑니다. 모든 선택을 취소하고 줄과 열 상태를 갱신합니다.</p>
</dd>
<dt>Show Completions</dt><dd><p>기존 이름을 선택할 수 있는 스크롤 할 수 있는 목록을 엽니다. 아래의 편집 및 탐색 섹션에서 <a class="reference internal" href="#completions"><span class="std std-ref">완성</span></a>을 참조하십시오.</p>
</dd>
<dt>Expand Word</dt><dd><p>같은 창에서 전체 단어와 일치하도록 입력한 접두사를 확장합니다; 다른 확장을 얻으려면 반복하십시오.</p>
</dd>
<dt>Show Call Tip</dt><dd><p>함수에 대해 닫히지 않은 괄호 뒤에서, 함수 매개 변수 힌트가 있는 작은 창을 엽니다. 아래의 편집과 탐색 섹션에서 <a class="reference internal" href="#calltips"><span class="std std-ref">콜팁</span></a>을 참조하십시오.</p>
</dd>
<dt>Show Surrounding Parens</dt><dd><p>주변 괄호를 강조 표시합니다.</p>
</dd>
</dl>
</section>
<section id="format-menu-editor-window-only">
<span id="format-menu"></span><h3>Format 메뉴 (편집기 창 전용)<a class="headerlink" href="#format-menu-editor-window-only" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>Format Paragraph</dt><dd><p>주석 블록이나 여러 줄 문자열의 빈 줄로 구분되는 현재 단락이나 문자열에서 선택한 줄을 다시 포맷합니다. 단락의 모든 줄은 N 열 미만으로 포맷되며, 여기서 N은 기본적으로 72입니다.</p>
</dd>
<dt>Indent Region</dt><dd><p>선택한 줄을 들여쓰기 너비(기본값은 4개의 스페이스)만큼 오른쪽으로 이동합니다.</p>
</dd>
<dt>Dedent Region</dt><dd><p>선택한 줄을 들여쓰기 너비(기본값은 4개의 스페이스)만큼 왼쪽으로 이동합니다.</p>
</dd>
<dt>Comment Out Region</dt><dd><p>선택한 줄 앞에 ## 을 삽입합니다.</p>
</dd>
<dt>Uncomment Region</dt><dd><p>선택한 줄에서 선행 # 이나 ## 을 제거합니다.</p>
</dd>
<dt>Tabify Region</dt><dd><p>연속된 <em>선행</em> 스페이스를 탭으로 바꿉니다. (참고: 4개의 스페이스 블록을 사용하여 파이썬 코드를 들여 쓰는 것이 좋습니다.)</p>
</dd>
<dt>Untabify Region</dt><dd><p><em>모든</em> 탭을 올바른 수의 스페이스로 바꿉니다.</p>
</dd>
<dt>Toggle Tabs</dt><dd><p>스페이스와 탭 들여쓰기 간을 전환하는 대화 상자를 엽니다.</p>
</dd>
<dt>New Indent Width</dt><dd><p>들여쓰기 너비를 변경하는 대화 상자를 엽니다. 파이썬 커뮤니티에서 받아들여지는 기본값은 4개의 스페이스입니다.</p>
</dd>
<dt>Strip Trailing Chitespace</dt><dd><p>여러 줄 문자열 내의 줄을 포함하여, 각 줄에 str.rstrip을 적용하여 줄의 마지막 비 공백 문자 뒤의 후행 스페이스와 기타 공백 문자를 제거합니다. 셸 창을 제외하고, 파일 끝에서 추가 줄 바꿈을 제거합니다.</p>
</dd>
</dl>
</section>
<section id="run-menu-editor-window-only">
<span id="index-2"></span><h3>Run 메뉴 (편집기 창 전용)<a class="headerlink" href="#run-menu-editor-window-only" title="Link to this heading">¶</a></h3>
<dl class="simple" id="run-module">
<dt>Run Module</dt><dd><p><a class="reference internal" href="#check-module"><span class="std std-ref">Check Module</span></a>을 수행합니다. 에러가 없으면, 셸을 다시 시작하여 환경을 정리한 다음, 모듈을 실행합니다. 출력은 셸 창에 표시됩니다. 출력에는 <code class="docutils literal notranslate"><span class="pre">print</span></code>나 <code class="docutils literal notranslate"><span class="pre">write</span></code>를 사용해야 함에 유의하십시오. 실행이 완료되면, 셸은 포커스를 유지하고 프롬프트를 표시합니다. 이 시점에서, 실행 결과를 대화식으로 탐색할 수 있습니다. 이것은 명령 줄에서 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-i</span> <span class="pre">file</span></code>로 파일을 실행하는 것과 유사합니다.</p>
</dd>
</dl>
<dl class="simple" id="run-custom">
<dt>Run… Customized</dt><dd><p><a class="reference internal" href="#run-module"><span class="std std-ref">Run Module</span></a>과 같지만, 사용자 정의 설정으로 모듈을 실행합니다. <em>명령 줄 인자(Command Line Arguments)</em>는 명령 줄에 전달된 것처럼 <a class="reference internal" href="sys.html#sys.argv" title="sys.argv"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.argv</span></code></a>를 확장합니다. 다시 시작하지 않고 모듈을 셸에서 실행할 수 있습니다.</p>
</dd>
</dl>
<dl class="simple" id="check-module">
<dt>Check Module</dt><dd><p>편집기 창에 현재 열려 있는 모듈의 문법을 검사합니다. 모듈이 저장되지 않았으면 IDLE은 설정 대화 상자의 General 탭에서 선택한 대로 사용자에게 저장을 요구하거나 자동 저장합니다. 문법 에러가 있으면, 대략적인 위치가 편집기 창에 표시됩니다.</p>
</dd>
</dl>
<dl class="simple" id="python-shell">
<dt>Python Shell</dt><dd><p>파이썬 셸 창을 열거나 깨웁니다.</p>
</dd>
</dl>
</section>
<section id="shell-menu-shell-window-only">
<h3>Shell 메뉴 (셸 창 전용)<a class="headerlink" href="#shell-menu-shell-window-only" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>View Last Restart</dt><dd><p>셸 창을 마지막 셸 재시작으로 스크롤 합니다.</p>
</dd>
<dt>Restart Shell</dt><dd><p>셸을 다시 시작하여 환경을 정리하고 디스플레이와 예외 처리를 재설정합니다.</p>
</dd>
<dt>Previous History</dt><dd><p>히스토리에서 현재 항목과 일치하는 이전 명령을 순환합니다.</p>
</dd>
<dt>Next History</dt><dd><p>히스토리에서 현재 항목과 일치하는 다음 명령을 순환합니다.</p>
</dd>
<dt>Interrupt Execution</dt><dd><p>실행 중인 프로그램을 중지합니다.</p>
</dd>
</dl>
</section>
<section id="debug-menu-shell-window-only">
<h3>Debug 메뉴 (셸 창 전용)<a class="headerlink" href="#debug-menu-shell-window-only" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>Go to File/Line</dt><dd><p>커서가 놓인 현재 줄과 줄 위에서 파일명과 줄 번호는 찾습니다. 발견되면, (파일이 아직 열려 있지 않으면 파일을 열고) 줄을 보여줍니다. 이를 사용하여 예외 트레이스백에서 참조된 소스 줄과 Find in Files에서 찾은 줄을 볼 수 있습니다. 셸 창과 출력 창의 문맥 메뉴에서도 사용할 수 있습니다.</p>
</dd>
</dl>
<dl class="simple" id="index-3">
<dt>Debugger (toggle)</dt><dd><p>활성화되면, 셸에 입력되거나 편집기에서 실행된 코드가 디버거에서 실행됩니다. 편집기에서, 문맥 메뉴를 사용하여 중단점을 설정할 수 있습니다. 이 기능은 아직 불완전하고 다소 실험적입니다.</p>
</dd>
<dt>Stack Viewer</dt><dd><p>locals와 globals에 대한 액세스와 함께, 트리 위젯에 마지막 예외의 스택 트레이스백을 표시합니다.</p>
</dd>
<dt>Auto-open Stack Viewer</dt><dd><p>처리되지 않은 예외에서 스택 뷰어를 자동으로 여는 것을 전환합니다.</p>
</dd>
</dl>
</section>
<section id="options-menu-shell-and-editor">
<h3>Options 메뉴 (셸과 편집기)<a class="headerlink" href="#options-menu-shell-and-editor" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>Configure IDLE</dt><dd><p>구성 대화 상자를 열고 다음과 같은 것들에 대한 설정을 변경합니다: 글꼴, 들여쓰기, 키 바인딩, 텍스트 색상 테마, 시작 창과 크기, 추가 도움말 소스 및 확장. macOS의 경우, 응용 프로그램 메뉴에서 Preferences를 선택하여 구성 대화 상자를 여십시오. 자세한 내용은, 도움말과 환경 설정에서 <a class="reference internal" href="#preferences"><span class="std std-ref">환경 설정</span></a>을 참조하십시오.</p>
</dd>
</dl>
<p>대부분의 구성 옵션은 모든 창이나 모든 미래 창에 적용됩니다. 아래의 옵션 항목은 활성 창에만 적용됩니다.</p>
<dl class="simple">
<dt>Show/Hide Code Context (편집기 창 전용)</dt><dd><p>편집 창의 상단에 창의 상단 위로 스크롤 된 코드의 블록 컨텍스트를 표시하는 팬을 엽니다. 아래의 편집과 탐색 섹션에서 <a class="reference internal" href="#code-context"><span class="std std-ref">코드 컨텍스트</span></a>를 참조하십시오.</p>
</dd>
<dt>Show/Hide Line Numbers (편집기 창 전용)</dt><dd><p>편집 창 왼쪽에 텍스트의 줄 번호를 표시하는 열을 엽니다. 기본 설정은 꺼져 있으며, 환경 설정에서 변경될 수 있습니다 (<a class="reference internal" href="#preferences"><span class="std std-ref">환경 설정</span></a>을 참조하십시오).</p>
</dd>
<dt>Zoom/Restore Height</dt><dd><p>창을 보통 크기와 최대 높이 사이에서 전환합니다. IDLE 구성 대화 상자의 General 탭에서 변경하지 않는 한 초기 크기의 기본값은 40줄 80문자입니다. 화면의 최대 높이는 화면에서 처음 확대할 때 창을 일시적으로 최대화하여 결정됩니다. 화면 설정을 변경하면 저장된 높이가 무효가 될 수 있습니다. 이 전환은 창이 최대화되었을 때 적용되지 않습니다.</p>
</dd>
</dl>
</section>
<section id="window-menu-shell-and-editor">
<h3>Window 메뉴 (셸과 편집기)<a class="headerlink" href="#window-menu-shell-and-editor" title="Link to this heading">¶</a></h3>
<p>열려있는 모든 창의 이름을 나열합니다; 하나를 선택하여 전경으로 가져옵니다 (필요한 경우 아이콘화를 해제합니다).</p>
</section>
<section id="help-menu-shell-and-editor">
<h3>Help 메뉴 (셸과 편집기)<a class="headerlink" href="#help-menu-shell-and-editor" title="Link to this heading">¶</a></h3>
<dl class="simple">
<dt>About IDLE</dt><dd><p>버전, 저작권, 라이선스, 크레딧 등을 표시합니다.</p>
</dd>
<dt>IDLE Help</dt><dd><p>메뉴 옵션, 기본 편집과 탐색 및 기타 팁을 자세히 설명하는 이 IDLE 설명서를 표시합니다.</p>
</dd>
<dt>Python Docs</dt><dd><p>설치되었으면, 로컬 파이썬 문서에 액세스하거나, 웹 브라우저를 시작하여 최신 파이썬 설명서를 보여주는 docs.python.org 를 엽니다.</p>
</dd>
<dt>Turtle Demo</dt><dd><p>예제 파이썬 코드와 터틀 그래픽을 제공하는 turtledemo 모듈을 실행합니다.</p>
</dd>
</dl>
<p>IDLE 구성 대화 상자의 General 탭으로 여기에 도움말 소스를 추가할 수 있습니다. Help 메뉴 선택에 대한 자세한 내용은 아래의 <a class="reference internal" href="#help-sources"><span class="std std-ref">도움말 소스</span></a> 하위 섹션을 참조하십시오.</p>
</section>
<section id="context-menus">
<span id="index-4"></span><h3>Context menus<a class="headerlink" href="#context-menus" title="Link to this heading">¶</a></h3>
<p>윈도우에서 마우스 오른쪽 버튼을 클릭하여 문맥 메뉴를 엽니다 (macOS에서는 Control-클릭). 문맥 메뉴에는 Edit 메뉴에도 있는 표준 클립 보드 기능이 있습니다.</p>
<dl class="simple">
<dt>Cut</dt><dd><p>선택 사항을 시스템 전체 클립 보드에 복사합니다; 그런 다음 선택을 삭제합니다.</p>
</dd>
<dt>Copy</dt><dd><p>선택 사항을 시스템 전체 클립 보드에 복사합니다.</p>
</dd>
<dt>Paste</dt><dd><p>시스템 전체 클립 보드의 내용을 현재 창에 삽입합니다.</p>
</dd>
</dl>
<p>편집기 창에는 중단점 기능도 있습니다. 중단점이 설정된 줄은 특별히 표시됩니다. 중단점은 디버거에서 실행할 때만 영향을 미칩니다. 파일의 중단점은 사용자의 <code class="docutils literal notranslate"><span class="pre">.idlerc</span></code> 디렉터리에 저장됩니다.</p>
<dl class="simple">
<dt>Set Breakpoint</dt><dd><p>현재 줄에 중단점을 설정합니다.</p>
</dd>
<dt>Clear Breakpoint</dt><dd><p>해당 줄에서 중단점을 지웁니다.</p>
</dd>
</dl>
<p>셸과 출력 창에서는 다음과 같은 것도 있습니다.</p>
<dl class="simple">
<dt>Go to file/line</dt><dd><p>Debug 메뉴와 같습니다.</p>
</dd>
</dl>
<p>셸 창에는 아래 <em>파이썬 셸 창</em> 하위 섹션에 설명된 출력 압착 기능도 있습니다.</p>
<dl class="simple">
<dt>Squeeze</dt><dd><p>커서가 출력 줄 위에 있으면, 위 코드와 아래 프롬프트 사이의 모든 출력을 ‘Squeezed text’ 레이블로 압착합니다.</p>
</dd>
</dl>
</section>
</section>
<section id="editing-and-navigation">
<span id="id2"></span><h2>Editing and Navigation<a class="headerlink" href="#editing-and-navigation" title="Link to this heading">¶</a></h2>
<section id="editor-windows">
<h3>편집기 창<a class="headerlink" href="#editor-windows" title="Link to this heading">¶</a></h3>
<p>설정과 IDLE 시작 방법에 따라, IDLE이 시작될 때 편집기 창을 열 수 있습니다. 그런 다음, File 메뉴를 사용하십시오. 주어진 파일에 대해 열린 편집기 창이 하나만 있을 수 있습니다.</p>
<p>제목 표시 줄에는 파일 이름, 전체 경로 및 창을 실행하는 파이썬과 IDLE 버전이 포함됩니다. 상태 표시 줄에는 줄 번호(‘Ln’)와 열 번호(‘Col’)가 있습니다. 줄 번호는 1로 시작합니다; 열 번호는 0으로 시작합니다.</p>
<p>IDLE은 알려진 .py* 확장자를 가진 파일에 파이썬 코드가 포함되어 있고 다른 파일은 그렇지 않다고 가정합니다. Run 메뉴를 사용하여 파이썬 코드를 실행하십시오.</p>
</section>
<section id="key-bindings">
<h3>키 바인딩<a class="headerlink" href="#key-bindings" title="Link to this heading">¶</a></h3>
<p>The IDLE insertion cursor is a thin vertical bar between character
positions.  When characters are entered, the insertion cursor and
everything to its right moves right one character and
the new character is entered in the new space.</p>
<p>Several non-character keys move the cursor and possibly
delete characters.  Deletion does not puts text on the clipboard,
but IDLE has an undo list.  Wherever this doc discusses keys,
‘C’ refers to the <kbd class="kbd docutils literal notranslate">Control</kbd> key on Windows and
Unix and the <kbd class="kbd docutils literal notranslate">Command</kbd> key on macOS.  (And all such discussions
assume that the keys have not been re-bound to something else.)</p>
<ul class="simple">
<li><p>Arrow keys move the cursor one character or line.</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">LeftArrow</kbd></kbd> and <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">RightArrow</kbd></kbd> moves left or right one word.</p></li>
<li><p><kbd class="kbd docutils literal notranslate">Home</kbd> and <kbd class="kbd docutils literal notranslate">End</kbd> go to the beginning or end of the line.</p></li>
<li><p><kbd class="kbd docutils literal notranslate">Page Up</kbd> and <kbd class="kbd docutils literal notranslate">Page Down</kbd> go up or down one screen.</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">Home</kbd></kbd> and <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">End</kbd></kbd> go to beginning or end of the file.</p></li>
<li><p><kbd class="kbd docutils literal notranslate">Backspace</kbd> and <kbd class="kbd docutils literal notranslate">Del</kbd> (or <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">d</kbd></kbd>) delete the previous
or next character.</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">Backspace</kbd></kbd> and <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">Del</kbd></kbd> delete one word left or right.</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">k</kbd></kbd> deletes (‘kills’) everything to the right.</p></li>
</ul>
<p>(복사하는 <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">c</kbd></kbd>와 붙여넣기 하는 <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">v</kbd></kbd>와 같은) 표준 키 바인딩이 작동 할 수 있습니다. 키 바인딩은 IDLE 구성 대화 상자에서 선택됩니다.</p>
</section>
<section id="automatic-indentation">
<h3>자동 들여쓰기<a class="headerlink" href="#automatic-indentation" title="Link to this heading">¶</a></h3>
<p>블록을 여는 문장 다음에, 다음 줄은 4개의 스페이스로 들여쓰기 됩니다 (파이썬 셸 창에서는 한 탭씩). 특정 키워드(break, return 등)가 다음에 다음 줄이 내어 쓰기 됩니다. 앞선 들여쓰기에서, <kbd class="kbd docutils literal notranslate">Backspace</kbd>는 최대 4개의 스페이스가 있으면 삭제합니다. <kbd class="kbd docutils literal notranslate">Tab</kbd>은 스페이스를 삽입합니다 (파이썬 셸 창에서는 하나의 탭), 개수는 들여쓰기 너비에 따라 다릅니다. 현재 Tcl/Tk 제한으로 인해 탭은 4개의 스페이스로 제한됩니다.</p>
<p><a class="reference internal" href="#format-menu"><span class="std std-ref">Format 메뉴</span></a>의 Indent/Dedent Region 명령도 참조하십시오.</p>
</section>
<section id="search-and-replace">
<h3>Search and Replace<a class="headerlink" href="#search-and-replace" title="Link to this heading">¶</a></h3>
<p>Any selection becomes a search target.  However, only selections within
a line work because searches are only performed within lines with the
terminal newline removed.  If <code class="docutils literal notranslate"><span class="pre">[x]</span> <span class="pre">Regular</span> <span class="pre">expression</span></code> is checked, the
target is interpreted according to the Python re module.</p>
</section>
<section id="completions">
<span id="id3"></span><h3>완성<a class="headerlink" href="#completions" title="Link to this heading">¶</a></h3>
<p>요청되고 사용할 수 있을 때, 모듈 이름, 클래스나 함수의 어트리뷰트 또는 파일명에 대한 완성(completions)이 제공됩니다. 각 요청 방법은 기존 이름을 가진 완성 상자가 표시됩니다. (예외는 아래의 탭 완성을 참조하십시오.) 모든 상자는, 문자를 입력하고 삭제해서; <kbd class="kbd docutils literal notranslate">Up</kbd>, <kbd class="kbd docutils literal notranslate">Down</kbd>, <kbd class="kbd docutils literal notranslate">PageUp</kbd>, <kbd class="kbd docutils literal notranslate">PageDown</kbd>, <kbd class="kbd docutils literal notranslate">Home</kbd> 및 <kbd class="kbd docutils literal notranslate">End</kbd> 키를 쳐서; 상자 안에서 한 번의 클릭으로 완성 중인 이름과 상자에서 강조 표시된 항목을 변경합니다. <kbd class="kbd docutils literal notranslate">Escape</kbd>, <kbd class="kbd docutils literal notranslate">Enter</kbd> 및 이중 <kbd class="kbd docutils literal notranslate">Tab</kbd> 키나 상자 외부를 클릭하여 상자를 닫으십시오. 상자 안에서 더블 클릭하면 선택하고 닫습니다.</p>
<p>상자를 여는 한 가지 방법은 키 문자를 입력하고 미리 정의된 간격만큼 기다리는 것입니다. 기본값은 2초입니다; 설정 대화 상자에서 사용자 정의하십시오. (자동 팝업을 방지하려면, 지연을 100000000과 같은 큰 밀리초로 설정하십시오.) 임포트한 모듈 이름이나 클래스나 함수 어트리뷰트의 경우, ‘.’를 입력하십시오. 루트 디렉터리의 파일명은 여는 인용 부호 바로 뒤에 <a class="reference internal" href="os.html#os.sep" title="os.sep"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.sep</span></code></a>이나 <a class="reference internal" href="os.html#os.altsep" title="os.altsep"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.altsep</span></code></a>을 입력하십시오. (윈도우에서는, 먼저 드라이브를 지정할 수 있습니다.) 디렉터리 이름과 구분자를 입력하여 서브 디렉터리로 이동하십시오.</p>
<p>기다리는 대신, 또는 상자를 닫은 후, Edit 메뉴에서 Show Completions를 사용하여 즉시 완성 상자를 여십시오. 기본 단축키는 <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">space</kbd></kbd>입니다. 상자를 열기 전에 원하는 이름의 접두사를 입력하면, 첫 번째 일치나 근거리 불일치가 표시됩니다. 결과는 상자가 표시된 후 접두사를 입력하는 것과 같습니다. 따옴표 뒤에서의 Show Completions는 루트 디렉터리 대신 현재 디렉터리에서 파일명을 완성합니다.</p>
<p>접두사 다음에 <kbd class="kbd docutils literal notranslate">Tab</kbd>을 누르면 일반적으로 Show Completions와 같은 효과가 있습니다. (접두사가 없으면 들여쓰기합니다.) 그러나, 접두사와 일치하는 항목이 하나뿐이면, 상자를 열지 않고 해당 일치가 편집기 텍스트에 즉시 추가됩니다.</p>
<p>문자열 밖에서 선행 ‘.’ 없이 접두어 뒤에서 ‘Show Completions’를 실행하거나 <kbd class="kbd docutils literal notranslate">Tab</kbd>을 누르면 키워드, 내장 이름 및 사용 가능한 모듈 수준 이름이 포함된 상자를 엽니다.</p>
<p>(셸과 달리) 편집기에서 코드를 편집할 때는, 셸을 다시 시작하지 않고 코드를 실행해서 사용 가능한 모듈 수준 이름을 늘리십시오. 파일 맨 위에 임포트를 추가한 후에 특히 유용합니다. 이것은 또한 가능한 어트리뷰트 완성을 늘립니다.</p>
<p>Completion boxes initially exclude names beginning with ‘_’ or, for
modules, not included in ‘__all__’.  The hidden names can be accessed
by typing ‘_’ after ‘.’, either before or after the box is opened.</p>
</section>
<section id="calltips">
<span id="id4"></span><h3>콜팁<a class="headerlink" href="#calltips" title="Link to this heading">¶</a></h3>
<p><em>액세스할 수 있는</em> 함수 이름 다음에 <kbd class="kbd docutils literal notranslate">(</kbd>를 입력하면 콜팁이 자동으로 표시됩니다. 함수 이름 표현식에는 점과 서브스크립트가 포함될 수 있습니다. 콜팁은 클릭하거나, 커서가 인자 영역 밖으로 이동하거나, <kbd class="kbd docutils literal notranslate">)</kbd>를 입력할 때까지 남아 있습니다. 커서가 정의의 인자 부분에 있을 때마다, 콜팁을 표시하려면 메뉴에서 Edit와 “Show Call Tip”을 선택하거나 바로 가기를 입력하십시오.</p>
<p>콜팁은 함수 서명과 독스트링의 첫 번째 빈 줄이나 다섯 번째 비어 있지 않은 줄에 이르는 줄로 구성됩니다. (일부 내장 함수에는 액세스할 수 있는 서명이 없습니다.) 서명의 ‘/’나 ‘*’는 앞서거나 뒤따르는 인자가 위치나 이름(키워드) 전용으로 전달됨을 가리킵니다. 세부 사항은 변경될 수 있습니다.</p>
<p>셸에서, 액세스할 수 있는 함수는 Idle 스스로 임포트 한 모듈을 포함하여, 사용자 프로세스로 임포트 한 모듈과 마지막 재시작 이후에 어떤 정의가 실행되었는지에 따라 다릅니다.</p>
<p>예를 들어, 셸을 다시 시작하고 <code class="docutils literal notranslate"><span class="pre">itertools.count(</span></code>를 입력하십시오. Idle이 자신의 목적으로 itertools를 사용자 프로세스로 임포트 하기 때문에 콜팁이 표시됩니다. (이것은 변경될 수 있습니다.) <code class="docutils literal notranslate"><span class="pre">turtle.write(</span></code>를 입력하면 아무것도 나타나지 않습니다. Idle은 직접 turtle을 임포트 하지 않습니다. 메뉴 항목과 바로 가기도 아무것도 하지 않습니다. <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">turtle</span></code>을 입력하십시오. 그다음부터, <code class="docutils literal notranslate"><span class="pre">turtle.write(</span></code>가 콜팁을 표시합니다.</p>
<p>편집기에서, import 문은 파일을 실행할 때까지 효과가 없습니다. import 문을 작성한 후, 함수 정의를 추가한 후 또는 기존 파일을 연 후 파일을 실행하고 싶을 것입니다.</p>
</section>
<section id="code-context">
<span id="id5"></span><h3>코드 컨텍스트<a class="headerlink" href="#code-context" title="Link to this heading">¶</a></h3>
<p>파이썬 코드가 포함된 편집기 창 내에서, 창의 상단에 팬을 표시하거나 숨기기 위해 코드 컨텍스트를 토글 할 수 있습니다. 표시될 때, 이 분할 창은 <code class="docutils literal notranslate"><span class="pre">class</span></code>, <code class="docutils literal notranslate"><span class="pre">def</span></code> 또는 <code class="docutils literal notranslate"><span class="pre">if</span></code> 키워드로 시작하는 것과 같이 블록 코드를 여는 줄들을 고정합니다, 그렇지 않다면 뷰에서 스크롤 되어 빠져나갈 줄들입니다. 팬의 크기는 모든 현재 컨텍스트 수준을 표시하기 위해 필요에 따라 확장과 축소되며, IDLE 구성 대화 상자에 정의된 최대 줄 수가지 입니다 (기본값은 15). 현재 컨텍스트 줄이 없고 기능이 켜지면, 빈 줄 하나가 표시됩니다. 컨텍스트 팬에서 줄을 클릭하면 해당 줄을 편집기 맨 위로 이동합니다.</p>
<p>컨텍스트 팬의 텍스트와 배경색은 IDLE 구성 대화 상자의 Highlights 탭에서 구성할 수 있습니다.</p>
</section>
<section id="shell-window">
<h3>Shell window<a class="headerlink" href="#shell-window" title="Link to this heading">¶</a></h3>
<p>In IDLE’s Shell, enter, edit, and recall complete statements. (Most
consoles and terminals only work with a single physical line at a time).</p>
<p>Submit a single-line statement for execution by hitting <kbd class="kbd docutils literal notranslate">Return</kbd>
with the cursor anywhere on the line.  If a line is extended with
Backslash (<kbd class="kbd docutils literal notranslate">\</kbd>), the cursor must be on the last physical line.
Submit a multi-line compound statement by entering a blank line after
the statement.</p>
<p>When one pastes code into Shell, it is not compiled and possibly executed
until one hits <kbd class="kbd docutils literal notranslate">Return</kbd>, as specified above.
One may edit pasted code first.
If one pastes more than one statement into Shell, the result will be a
<a class="reference internal" href="exceptions.html#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a> when multiple statements are compiled as if they were one.</p>
<p>Lines containing <code class="docutils literal notranslate"><span class="pre">RESTART</span></code> mean that the user execution process has been
re-started.  This occurs when the user execution process has crashed,
when one requests a restart on the Shell menu, or when one runs code
in an editor window.</p>
<p>The editing features described in previous subsections work when entering
code interactively.  IDLE’s Shell window also responds to the following:</p>
<ul class="simple">
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">c</kbd></kbd> attempts to interrupt statement execution (but may fail).</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">d</kbd></kbd> closes Shell if typed at a <code class="docutils literal notranslate"><span class="pre">&gt;&gt;&gt;</span></code> prompt.</p></li>
<li><p><kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">Alt</kbd>-<kbd class="kbd docutils literal notranslate">p</kbd></kbd> and <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">Alt</kbd>-<kbd class="kbd docutils literal notranslate">n</kbd></kbd> (<kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">p</kbd></kbd> and <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">C</kbd>-<kbd class="kbd docutils literal notranslate">n</kbd></kbd> on macOS)
retrieve to the current prompt the previous or next previously
entered statement that matches anything already typed.</p></li>
<li><p><kbd class="kbd docutils literal notranslate">Return</kbd> while the cursor is on any previous statement
appends the latter to anything already typed at the prompt.</p></li>
</ul>
</section>
<section id="text-colors">
<h3>텍스트 색상<a class="headerlink" href="#text-colors" title="Link to this heading">¶</a></h3>
<p>Idle은 기본적으로 흰색 위의 검은색 텍스트지만, 특수한 의미로 텍스트를 채색합니다. 셸의 경우, 셸 출력, 셸 에러, 사용자 출력 및 사용자 에러입니다. 파이썬 코드의 경우, 셸 프롬프트나 편집기에서, 키워드, 내장 클래스와 함수 이름, <code class="docutils literal notranslate"><span class="pre">class</span></code>와 <code class="docutils literal notranslate"><span class="pre">def</span></code> 뒤에 오는 이름, 문자열 및 주석입니다. 모든 텍스트 창에서, 커서 (있다면), 찾은 텍스트 (가능하다면) 및 선택한 텍스트입니다.</p>
<p>IDLE also highlights the <a class="reference internal" href="../reference/lexical_analysis.html#soft-keywords"><span class="std std-ref">soft keywords</span></a> <a class="reference internal" href="../reference/compound_stmts.html#match"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">match</span></code></a>,
<a class="reference internal" href="../reference/compound_stmts.html#match"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">case</span></code></a>, and <a class="reference internal" href="../reference/compound_stmts.html#wildcard-patterns"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">_</span></code></a> in
pattern-matching statements. However, this highlighting is not perfect and
will be incorrect in some rare cases, including some <code class="docutils literal notranslate"><span class="pre">_</span></code>-s in <code class="docutils literal notranslate"><span class="pre">case</span></code>
patterns.</p>
<p>텍스트 채색은 백그라운드에서 수행되므로, 채색되지 않은 텍스트가 때때로 표시됩니다. 색 구성표를 변경하려면, IDLE 구성 대화 상자 Highlighting 탭을 사용하십시오. 편집기의 디버거 중단점 표시와 팝업과 대화 상자의 텍스트는 사용자가 구성할 수 없습니다.</p>
</section>
</section>
<section id="startup-and-code-execution">
<h2>Startup and Code Execution<a class="headerlink" href="#startup-and-code-execution" title="Link to this heading">¶</a></h2>
<p><code class="docutils literal notranslate"><span class="pre">-s</span></code> 옵션으로 시작할 때, IDLE은 환경 변수 <span class="target" id="index-10"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">IDLESTARTUP</span></code>이나 <span class="target" id="index-11"></span><a class="reference internal" href="../using/cmdline.html#envvar-PYTHONSTARTUP"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONSTARTUP</span></code></a>가 참조하는 파일을 실행합니다. IDLE은 먼저 <code class="docutils literal notranslate"><span class="pre">IDLESTARTUP</span></code>을 확인합니다; <code class="docutils literal notranslate"><span class="pre">IDLESTARTUP</span></code>이 있으면 참조된 파일이 실행됩니다. <code class="docutils literal notranslate"><span class="pre">IDLESTARTUP</span></code>이 없으면, IDLE은 <code class="docutils literal notranslate"><span class="pre">PYTHONSTARTUP</span></code>을 확인합니다. 이러한 환경 변수가 참조하는 파일은 IDLE 셸에서 자주 사용되는 함수를 저장하거나 공통 모듈을 임포트 하기 위해 import 문을 실행하기에 편리한 장소입니다.</p>
<p>또한, <code class="docutils literal notranslate"><span class="pre">Tk</span></code>도 시작 파일이 있으면 로드합니다. Tk 파일은 무조건 로드됨에 유의하십시오. 이 추가 파일은 <code class="docutils literal notranslate"><span class="pre">.Idle.py</span></code>이며 사용자의 홈 디렉터리에서 찾습니다. 이 파일의 문장은 Tk 이름 공간에서 실행되므로, 이 파일은 IDLE의 파이썬 셸에서 사용할 함수를 임포트 하는 데 유용하지 않습니다.</p>
<section id="command-line-usage">
<h3>명령 줄 사용법<a class="headerlink" href="#command-line-usage" title="Link to this heading">¶</a></h3>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>idle.py [-c command] [-d] [-e] [-h] [-i] [-r file] [-s] [-t title] [-] [arg] ...

-c command  run command in the shell window
-d          enable debugger and open shell window
-e          open editor window
-h          print help message with legal combinations and exit
-i          open shell window
-r file     run file in shell window
-s          run $IDLESTARTUP or $PYTHONSTARTUP first, in shell window
-t title    set title of shell window
-           run stdin in shell (- must be last option before args)
</pre></div>
</div>
<p>인자가 있으면:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">-</span></code>, <code class="docutils literal notranslate"><span class="pre">-c</span></code> 또는 <code class="docutils literal notranslate"><span class="pre">r</span></code>이 사용되면, 모든 인자는 <code class="docutils literal notranslate"><span class="pre">sys.argv[1:...]</span></code>에 배치되고 <code class="docutils literal notranslate"><span class="pre">sys.argv[0]</span></code>은 <code class="docutils literal notranslate"><span class="pre">''</span></code>, <code class="docutils literal notranslate"><span class="pre">'-c'</span></code> 또는 <code class="docutils literal notranslate"><span class="pre">'-r'</span></code>로 설정됩니다. Options 대화 상자에서 기본값이 설정되어 있어도, 편집기 창이 열리지 않습니다.</p></li>
<li><p>그렇지 않으면, 인자는 편집을 위해 열리는 파일이며 <code class="docutils literal notranslate"><span class="pre">sys.argv</span></code>는 IDLE 자체에 전달된 인자를 반영합니다.</p></li>
</ul>
</section>
<section id="startup-failure">
<h3>시작 실패<a class="headerlink" href="#startup-failure" title="Link to this heading">¶</a></h3>
<p>IDLE은 소켓을 사용하여 IDLE GUI 프로세스와 사용자 코드 실행 프로세스 간에 통신합니다. 셸을 시작하거나 다시 시작할 때마다 연결을 만들어야 합니다. (후자는 ‘RESTART’라고 표시된 구분 선으로 표시됩니다). 사용자 프로세스가 GUI 프로세스에 연결하지 못하면, 보통 사용자에게 알리는 ‘cannot connect’ 메시지가 담긴 <code class="docutils literal notranslate"><span class="pre">Tk</span></code> 에러 상자가 표시됩니다. 그런 다음 종료합니다.</p>
<p>유닉스 시스템의 한가지 특정한 연결 실패는 시스템 네트워크 설정의 어딘가에서 잘못 구성된 마스쿼레이딩 규칙으로 인해 발생합니다. IDLE이 터미널에서 시작될 때, <code class="docutils literal notranslate"><span class="pre">**</span> <span class="pre">Invalid</span> <span class="pre">host:</span></code>로 시작하는 메시지를 보게 됩니다. 유효한 값은 <code class="docutils literal notranslate"><span class="pre">127.0.0.1</span> <span class="pre">(idlelib.rpc.LOCALHOST)</span></code>입니다. 한 터미널 창에서 <code class="docutils literal notranslate"><span class="pre">tcpconnect</span> <span class="pre">-irv</span> <span class="pre">127.0.0.1</span> <span class="pre">6543</span></code>로, 다른 창에서 <code class="docutils literal notranslate"><span class="pre">tcplisten</span> <span class="pre">&lt;same</span> <span class="pre">args&gt;</span></code>로 진단할 수 있습니다.</p>
<p>일반적인 실패 원인은 <em>random.py</em>와 <em>tkinter.py</em>처럼, 표준 라이브러리 모듈과 이름이 같은 사용자가 작성한 파일입니다. 이러한 파일이 실행하려는 파일과 같은 디렉터리에 있을 때, IDLE은 표준 라이브러리 파일을 임포트 할 수 없습니다. 현재 수선법은 사용자 파일의 이름을 바꾸는 것입니다.</p>
<p>앞엣것보다 덜 흔하지만, 바이러스 백신이나 방화벽 프로그램이 연결을 중지할 수 있습니다. 프로그램이 연결을 허용하도록 지시할 수 없으면, IDLE이 작동하도록 프로그램을 꺼야 합니다. 외부 포트에 데이터가 노출되지 않기 때문에 이 내부 연결을 허용하는 것은 안전합니다. 비슷한 문제는 연결을 차단하는 네트워크 구성 에러입니다.</p>
<p>파이썬 설치 문제로 인해 IDLE이 중지되는 경우가 있습니다: 여러 버전이 충돌하거나 단일 설치에 관리자 액세스가 필요할 수 있습니다. 충돌을 제거하거나, 관리자 권한으로 실행할 수 없거나 그러고 싶지 않으면 파이썬을 완전히 제거하고 다시 시작하기가 가장 쉽습니다.</p>
<p>좀비 pythonw.exe 프로세스가 문제일 수 있습니다. 윈도우에서는, 작업 관리자를 사용하여 확인하고 있다면 중지하십시오. 때때로 프로그램 충돌이나 키보드 인터럽트(control-C)에 의해 시작된 재시작이 연결에 실패할 수 있습니다. 에러 상자를 닫거나 Shell 메뉴에서 Restart Shell을 사용하면 일시적인 문제를 해결할 수 있습니다.</p>
<p>IDLE이 처음 시작되면, <code class="docutils literal notranslate"><span class="pre">~/.idlerc/</span></code>에서 사용자 구성 파일을 읽으려고 시도합니다 (~는 사용자의 홈 디렉터리입니다). 문제가 있으면, 에러 메시지가 표시되어야 합니다. 임의의 디스크 결함은 예외로 할 때, 파일을 절대 직접 편집하지 않으면 이를 방지할 수 있습니다. 대신, Options의 구성 대화 상자를 사용하십시오. 일단 사용자 구성 파일에 에러가 발생하면, 이를 삭제하고 설정 대화 상자에서 다시 시작하는 것이 가장 좋습니다.</p>
<p>IDLE이 메시지 없이 종료되고, 콘솔에서 시작되지 않았으면, 콘솔이나 터미널에서 시작하고 (<code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">idlelib</span></code>) 에러 메시지가 나타나는지 확인하십시오.</p>
<p>Tcl/tk가 <code class="docutils literal notranslate"><span class="pre">8.6.11</span></code>(<code class="docutils literal notranslate"><span class="pre">About</span> <span class="pre">IDLE</span></code>을 보십시오)보다 오래된 유닉스 기반 시스템에서 특정 글꼴의 특정 문자는 터미널에 보내는 메시지와 함께 tk 실패를 일으킬 수 있습니다. 이러한 문자가 있는 파일을 편집하기 위해 IDLE을 시작하거나 나중에 이러한 문자를 입력할 때 발생할 수 있습니다. tcl/tk를 업그레이드할 수 없으면, 더 잘 작동하는 글꼴을 사용하도록 IDLE을 다시 구성하십시오.</p>
</section>
<section id="running-user-code">
<h3>사용자 코드 실행하기<a class="headerlink" href="#running-user-code" title="Link to this heading">¶</a></h3>
<p>With rare exceptions, the result of executing Python code with IDLE is
intended to be the same as executing the same code by the default method,
directly with Python in a text-mode system console or terminal window.
However, the different interface and operation occasionally affect
visible results.  For instance, <code class="docutils literal notranslate"><span class="pre">sys.modules</span></code> starts with more entries,
and <code class="docutils literal notranslate"><span class="pre">threading.active_count()</span></code> returns 2 instead of 1.</p>
<p>기본적으로, IDLE은 셸과 편집기를 실행하는 사용자 인터페이스 프로세스가 아닌 별도의 OS 프로세스에서 사용자 코드를 실행합니다. 실행 프로세스에서, <code class="docutils literal notranslate"><span class="pre">sys.stdin</span></code>, <code class="docutils literal notranslate"><span class="pre">sys.stdout</span></code> 및 <code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code>를 셸 창에서 입력을 받고 셸 창으로 출력을 보내는 객체로 바꿉니다. <code class="docutils literal notranslate"><span class="pre">sys.__stdin__</span></code>, <code class="docutils literal notranslate"><span class="pre">sys.__stdout__</span></code> 및 <code class="docutils literal notranslate"><span class="pre">sys.__stderr__</span></code>에 저장된 원래 값은 건드리지 않지만, <code class="docutils literal notranslate"><span class="pre">None</span></code>일 수 있습니다.</p>
<p>한 프로세스에서 다른 프로세스의 텍스트 위젯으로 인쇄 출력을 보내는 것은 같은 프로세스에서 시스템 터미널로 인쇄하는 것보다 느립니다. 이것은 여러 인자를 인쇄할 때 특히 그렇습니다. 각 인자의 문자열, 각 구분자, 줄 바꿈은 개별적으로 전송되기 때문입니다. 개발할 때는 일반적으로 문제가 되지 않지만, IDLE로 더 빨리 인쇄하려면 표시하려는 모든 항목을 포맷하고 결합한 다음 단일 문자열을 인쇄하십시오. 포맷 문자열과 <a class="reference internal" href="stdtypes.html#str.join" title="str.join"><code class="xref py py-meth docutils literal notranslate"><span class="pre">str.join()</span></code></a> 모두 필드와 줄을 결합하는 데 도움이 될 수 있습니다.</p>
<p>IDLE’s standard stream replacements are not inherited by subprocesses
created in the execution process, whether directly by user code or by
modules such as multiprocessing.  If such subprocess use <code class="docutils literal notranslate"><span class="pre">input</span></code> from
sys.stdin or <code class="docutils literal notranslate"><span class="pre">print</span></code> or <code class="docutils literal notranslate"><span class="pre">write</span></code> to sys.stdout or sys.stderr,
IDLE should be started in a command line window.  (On Windows,
use <code class="docutils literal notranslate"><span class="pre">python</span></code> or <code class="docutils literal notranslate"><span class="pre">py</span></code> rather than <code class="docutils literal notranslate"><span class="pre">pythonw</span></code> or <code class="docutils literal notranslate"><span class="pre">pyw</span></code>.)
The secondary subprocess
will then be attached to that window for input and output.</p>
<p><code class="docutils literal notranslate"><span class="pre">importlib.reload(sys)</span></code>와 같은 사용자 코드에 의해 <code class="docutils literal notranslate"><span class="pre">sys</span></code>가 재설정되면, IDLE의 변경 사항이 손실되고 키보드로부터의 입력과 화면으로의 출력이 올바르게 동작하지 않게 됩니다.</p>
<p>셸에 포커스가 있으면, 키보드와 화면을 제어합니다. 이것은 일반적으로 투명하지만, 키보드와 화면에 직접 액세스하는 함수는 작동하지 않습니다. 여기에는 키를 눌렀는지를 판단하는 시스템 특정 함수가 포함됩니다.</p>
<p>실행 프로세스에서 실행 중인 IDLE 코드는 그렇지 않다면 없을 프레임을 호출 스택에 추가합니다. IDLE은 <code class="docutils literal notranslate"><span class="pre">sys.getrecursionlimit</span></code>와 <code class="docutils literal notranslate"><span class="pre">sys.setrecursionlimit</span></code>를 래핑하여 추가 스택 프레임의 영향을 줄입니다.</p>
<p>사용자 코드가 직접 또는 sys.exit를 호출하여 SystemExit를 발생시키면, IDLE은 종료하는 대신 셸 프롬프트로 돌아갑니다.</p>
</section>
<section id="user-output-in-shell">
<h3>셸의 사용자 출력<a class="headerlink" href="#user-output-in-shell" title="Link to this heading">¶</a></h3>
<p>프로그램이 텍스트를 출력할 때, 결과는 해당 출력 장치에 의해 결정됩니다. IDLE이 사용자 코드를 실행할 때, <code class="docutils literal notranslate"><span class="pre">sys.stdout</span></code>과 <code class="docutils literal notranslate"><span class="pre">sys.stderr</span></code>이 IDLE 셸의 표시 영역에 연결됩니다. 그 기능 중 일부는 하부 Tk Text 위젯에서 상속됩니다. 다른 것은 프로그래밍한 추가 사항입니다. (중요하다면) 셸은 상용 실행보다는 개발용으로 설계되었습니다.</p>
<p>예를 들어, 셸은 절대로 출력을 버리지 않습니다. 셸에 무제한 출력을 보내는 프로그램은 결국 메모리를 채워서, 메모리 에러를 일으킵니다. 반대로, 일부 시스템 텍스트 창은 마지막 n 줄의 출력만 유지합니다. 예를 들어, 윈도우 콘솔은 사용자가 설정하면 최대 9999줄을 유지할 수 있으며, 기본값은 300입니다.</p>
<p>Tk Text 위젯, 따라서 IDLE의 셸은 유니코드의 BMP (Basic Multilingual Plane) 부분 집합에서 문자(코드 포인트)를 표시합니다. 어떤 문자가 적절한 글리프로 표시될지와 어떤 문자가 대체 상자로 표시될지는 운영 체제와 설치된 글꼴에 따라 다릅니다. 탭 문자는 뒤따르는 문자가 다음 탭 정지 뒤에서 시작되도록 합니다. (탭 정지는 8 ‘문자’마다 나타납니다). 줄 바꿈 문자는 뒤따르는 텍스트가 새 줄에 나타나게 합니다. 다른 제어 문자는 운영 체제와 글꼴에 따라 무시되거나 스페이스, 상자 또는 그 밖의 것으로 표시됩니다. (화살표 키를 사용하여 이러한 출력에서 텍스트 커서를 움직이면 예상치 못한 간격 동작이 나타날 수 있습니다.)</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">s</span> <span class="o">=</span> <span class="s1">&#39;a</span><span class="se">\t</span><span class="s1">b</span><span class="se">\a</span><span class="s1">&lt;</span><span class="se">\x02</span><span class="s1">&gt;&lt;</span><span class="se">\r</span><span class="s1">&gt;</span><span class="se">\b</span><span class="s1">c</span><span class="se">\n</span><span class="s1">d&#39;</span>  <span class="c1"># Enter 22 chars.</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="go">14</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">s</span>  <span class="c1"># Display repr(s)</span>
<span class="go">&#39;a\tb\x07&lt;\x02&gt;&lt;\r&gt;\x08c\nd&#39;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>  <span class="c1"># Display s as is.</span>
<span class="go"># Result varies by OS and font.  Try it.</span>
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">repr</span></code> 함수는 표현식 값의 대화 형 에코에 사용됩니다. 입력 문자열의 변경된 버전을 반환하는데, 제어 코드, 일부 BMP 코드 포인트 및 모든 BMP 이외의 코드 포인트가 이스케이프 코드로 대체됩니다. 위에서 예시했듯이, 어떻게 표시되는지와 관계없이 문자열의 문자를 식별할 수 있도록 합니다.</p>
<p>정상과 에러 출력은 일반적으로 코드 입력 및 서로와 분리되어 별도의 줄에 유지됩니다. 그들은 각각 다른 강조 색상을 얻습니다.</p>
<p>SyntaxError 트레이스백의 경우, 에러가 감지된 곳의 일반적인 ‘^’ 표시는 에러 강조로 텍스트를 색칠하는 것으로 대체됩니다. 파일에서 실행한 코드가 다른 예외를 발생시킬 때, 트레이스백 줄을 마우스 오른쪽 단추로 클릭하여 IDLE 편집기의 해당 줄로 이동할 수 있습니다. 필요하면 파일이 열립니다.</p>
<p>셸에는 출력 라인을 ‘Squeezed text’ 레이블로 압착하는 특수 기능이 있습니다. 이것은 N 줄을 넘어가는 출력에 대해 자동으로 수행됩니다 (기본적으로 N = 50). Settings 대화 상자의 General 페이지의 PyShell 섹션에서 N을 변경할 수 있습니다. 출력을 마우스 오른쪽 버튼으로 클릭하면 더 적은 줄의 출력을 압착할 수 있습니다. 이것은 스크롤 속도를 늦출 수 있을 정도로 긴 줄에 유용할 수 있습니다.</p>
<p>압착된 출력은 레이블을 더블 클릭하여 제자리에서 펼쳐집니다. 레이블을 마우스 오른쪽 버튼으로 클릭하여 클립 보드나 별도의 보기 창으로 보낼 수도 있습니다.</p>
</section>
<section id="developing-tkinter-applications">
<h3>tkinter 응용 프로그램 개발하기<a class="headerlink" href="#developing-tkinter-applications" title="Link to this heading">¶</a></h3>
<p>IDLE은 tkinter 프로그램 개발을 용이하게 하기 위해 표준 파이썬과 의도적으로 다릅니다. 표준 파이썬에서 <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">tkinter</span> <span class="pre">as</span> <span class="pre">tk;</span> <span class="pre">root</span> <span class="pre">=</span> <span class="pre">tk.Tk()</span></code>를 입력하면 아무것도 나타나지 않습니다. IDLE에 동일하게 입력하면 tk 창이 나타납니다. 표준 파이썬에서는, 창을 보려면 <code class="docutils literal notranslate"><span class="pre">root.update()</span></code>도 입력해야 합니다. IDLE은 초당 약 20회, 대략 50밀리초마다, 백그라운드에서 동등한 일을 합니다. 그런 다음 <code class="docutils literal notranslate"><span class="pre">b</span> <span class="pre">=</span> <span class="pre">tk.Button(root,</span> <span class="pre">text='button');</span> <span class="pre">b.pack()</span></code>을 입력하십시오. 마찬가지로, 표준 파이썬에서는 <code class="docutils literal notranslate"><span class="pre">root.update()</span></code>를 입력할 때까지 아무것도 시각적으로 변경되지 않습니다.</p>
<p>대부분의 tkinter 프로그램은 <code class="docutils literal notranslate"><span class="pre">root.mainloop()</span></code>를 실행하는데, 일반적으로 tk 앱이 파괴될 때까지 반환되지 않습니다. 프로그램이 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-i</span></code>이나 IDLE 편집기에서 실행되면, <code class="docutils literal notranslate"><span class="pre">mainloop()</span></code>가 반환할 때까지 (상호 작용할 것이 남아있지 않을 때까지) <code class="docutils literal notranslate"><span class="pre">&gt;&gt;&gt;</span></code> 셸 프롬프트가 나타나지 않습니다.</p>
<p>IDLE 편집기에서 tkinter 프로그램을 실행할 때, mainloop 호출을 주석 처리할 수 있습니다. 그러면 즉시 셸 프롬프트를 얻고 라이브 응용 프로그램과 상호 작용할 수 있습니다. 표준 파이썬에서 실행할 때 mainloop 호출을 다시 활성화해야 한다는 것을 기억해야 합니다.</p>
</section>
<section id="running-without-a-subprocess">
<h3>서브 프로세스 없이 실행하기<a class="headerlink" href="#running-without-a-subprocess" title="Link to this heading">¶</a></h3>
<p>By default, IDLE executes user code in a separate subprocess via a socket,
which uses the internal loopback interface.  This connection is not
externally visible and no data is sent to or received from the internet.
If firewall software complains anyway, you can ignore it.</p>
<p>소켓 연결 시도가 실패하면, Idle은 여러분에게 알립니다. 이러한 장애는 때때로 일시적이지만, 지속한다면, 문제는 방화벽이 연결을 차단하거나 특정 시스템의 구성이 잘못되었을 수 있습니다. 문제가 해결될 때까지, -n 명령 줄 스위치를 사용하여 Idle을 실행할 수 있습니다.</p>
<p>IDLE이 -n 명령 줄 스위치로 시작되면 단일 프로세스에서 실행되며 RPC 파이썬 실행 서버를 실행하는 서브 프로세스를 만들지 않습니다. 파이썬이 플랫폼에서 서브 프로세스나 RPC 소켓 인터페이스를 만들 수 없을 때 유용할 수 있습니다. 그러나, 이 모드에서 사용자 코드는 IDLE 자체와 분리되지 않습니다. 또한, Run/Run Module (F5) 가 선택될 때 환경이 다시 시작되지 않습니다. 코드가 수정되면, 변경 사항을 적용하려면 영향을 받는 모듈을 reload()하고 특정 항목을 다시 임포트 해야 합니다 (예를 들어 from foo import baz). 이러한 이유로, 가능하다면 기본 서브 프로세스로 IDLE을 실행하는 것이 좋습니다.</p>
<div class="deprecated">
<p><span class="versionmodified deprecated">버전 3.4부터 폐지됨.</span></p>
</div>
</section>
</section>
<section id="help-and-preferences">
<h2>Help and Preferences<a class="headerlink" href="#help-and-preferences" title="Link to this heading">¶</a></h2>
<section id="help-sources">
<span id="id6"></span><h3>도움말 소스<a class="headerlink" href="#help-sources" title="Link to this heading">¶</a></h3>
<p>Help 메뉴 항목 “IDLE Help”는 라이브러리 레퍼런스의 IDLE 장의 포맷된 html 버전을 표시합니다. 읽기 전용 tkinter 텍스트 창에 표시되는 결과는 웹 브라우저에서 보는 것과 비슷합니다. 마우스 휠, 스크롤 바 또는 위/아래 화살표 키를 누른 상태로 텍스트를 탐색하십시오. 또는 TOC(목차) 단추를 클릭하고 열린 상자에서 섹션 머리글을 선택하십시오.</p>
<p>Help 메뉴 항목 “Python Docs”는 <code class="docutils literal notranslate"><span class="pre">docs.python.org/x.y</span></code>에 있는 자습서를 포함하여 광범위한 도움말 소스를 엽니다, 여기서 ‘x.y’는 현재 실행 중인 파이썬 버전입니다. 시스템에 문서의 오프라인 사본이 있으면 (설치 옵션일 수 있습니다), 대신 열립니다.</p>
<p>IDLE 구성 대화 상자의 General 탭을 사용하여 언제든지 도움말 메뉴에서 선택한 URL을 추가하거나 제거할 수 있습니다.</p>
</section>
<section id="setting-preferences">
<span id="preferences"></span><h3>환경 설정<a class="headerlink" href="#setting-preferences" title="Link to this heading">¶</a></h3>
<p>글꼴 설정, 강조 표시, 키 및 일반 설정은 Option 메뉴의 IDLE 구성을 통해 변경할 수 있습니다. 기본이 아닌 사용자 설정은 사용자 홈 디렉터리의 <code class="docutils literal notranslate"><span class="pre">.idlerc</span></code> 디렉터리에 저장됩니다. 잘못된 사용자 구성 파일로 인한 문제점은 <code class="docutils literal notranslate"><span class="pre">.idlerc</span></code>에서 하나 이상의 파일을 편집하거나 삭제하여 해결됩니다.</p>
<p>Font 탭에서, 여러 언어로 된 여러 문자의 서체와 크기 효과에 대한 텍스트 샘플을 참조하십시오. 개인적으로 관심 있는 다른 문자를 추가하려면 샘플을 편집하십시오. 샘플을 사용하여 고정 폭 글꼴을 선택하십시오. 셸이나 편집기에서 특정 문자에 문제가 있으면, 샘플 상단에 해당 문자를 추가하고 먼저 크기를 변경한 다음 글꼴을 변경해보십시오.</p>
<p>Highlights와 Keys 탭에서, 내장이나 사용자 정의 색상 테마와 키 집합을 선택하십시오. 이전 IDLE로 최신 내장 색상 테마나 키 집합을 사용하려면, 새 사용자 정의 색상 테마나 키 집합으로 저장하십시오, 그러면 이전 IDLE에서 쉽게 액세스 할 수 있습니다.</p>
</section>
<section id="idle-on-macos">
<h3>macOS의 IDLE<a class="headerlink" href="#idle-on-macos" title="Link to this heading">¶</a></h3>
<p>시스템 환경설정: Dock에서, “문서를 열 때 탭 사용”을 “항상”으로 설정할 수 있습니다. 이 설정은 IDLE에서 사용하는 tk/tkinter GUI 프레임 워크와 호환되지 않으며, 몇 가지 IDLE 기능을 훼손합니다.</p>
</section>
<section id="extensions">
<h3>확장<a class="headerlink" href="#extensions" title="Link to this heading">¶</a></h3>
<p>IDLE에는 확장 기능이 포함되어 있습니다. 설정 대화 상자의 Extensions 탭에서 확장에 대한 설정을 변경할 수 있습니다. 자세한 정보는 idlelib 디렉터리에 있는 config-extensions.def의 시작 부분을 참조하십시오. 현재 기본 확장은 zzdummy 뿐이며, 테스트에도 사용되는 예입니다.</p>
</section>
</section>
<section id="module-idlelib">
<span id="idlelib"></span><h2>idlelib<a class="headerlink" href="#module-idlelib" title="Link to this heading">¶</a></h2>
<p><strong>Source code:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/idlelib">Lib/idlelib</a></p>
<hr class="docutils" />
<p>The Lib/idlelib package implements the IDLE application.  See the rest
of this page for how to use IDLE.</p>
<p>The files in idlelib are described in idlelib/README.txt.  Access it
either in idlelib or click Help =&gt; About IDLE on the IDLE menu.  This
file also maps IDLE menu items to the code that implements the item.
Except for files listed under ‘Startup’, the idlelib code is ‘private’ in
sense that feature changes can be backported (see <span class="target" id="index-7"></span><a class="pep reference external" href="https://peps.python.org/pep-0434/"><strong>PEP 434</strong></a>).</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
        </div>
      </div>
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
  <div>
    <h3><a href="../contents.html">목차</a></h3>
    <ul>
<li><a class="reference internal" href="#">IDLE</a><ul>
<li><a class="reference internal" href="#menus">메뉴</a><ul>
<li><a class="reference internal" href="#file-menu-shell-and-editor">File 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#edit-menu-shell-and-editor">Edit 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#format-menu-editor-window-only">Format 메뉴 (편집기 창 전용)</a></li>
<li><a class="reference internal" href="#run-menu-editor-window-only">Run 메뉴 (편집기 창 전용)</a></li>
<li><a class="reference internal" href="#shell-menu-shell-window-only">Shell 메뉴 (셸 창 전용)</a></li>
<li><a class="reference internal" href="#debug-menu-shell-window-only">Debug 메뉴 (셸 창 전용)</a></li>
<li><a class="reference internal" href="#options-menu-shell-and-editor">Options 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#window-menu-shell-and-editor">Window 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#help-menu-shell-and-editor">Help 메뉴 (셸과 편집기)</a></li>
<li><a class="reference internal" href="#context-menus">Context menus</a></li>
</ul>
</li>
<li><a class="reference internal" href="#editing-and-navigation">Editing and Navigation</a><ul>
<li><a class="reference internal" href="#editor-windows">편집기 창</a></li>
<li><a class="reference internal" href="#key-bindings">키 바인딩</a></li>
<li><a class="reference internal" href="#automatic-indentation">자동 들여쓰기</a></li>
<li><a class="reference internal" href="#search-and-replace">Search and Replace</a></li>
<li><a class="reference internal" href="#completions">완성</a></li>
<li><a class="reference internal" href="#calltips">콜팁</a></li>
<li><a class="reference internal" href="#code-context">코드 컨텍스트</a></li>
<li><a class="reference internal" href="#shell-window">Shell window</a></li>
<li><a class="reference internal" href="#text-colors">텍스트 색상</a></li>
</ul>
</li>
<li><a class="reference internal" href="#startup-and-code-execution">Startup and Code Execution</a><ul>
<li><a class="reference internal" href="#command-line-usage">명령 줄 사용법</a></li>
<li><a class="reference internal" href="#startup-failure">시작 실패</a></li>
<li><a class="reference internal" href="#running-user-code">사용자 코드 실행하기</a></li>
<li><a class="reference internal" href="#user-output-in-shell">셸의 사용자 출력</a></li>
<li><a class="reference internal" href="#developing-tkinter-applications">tkinter 응용 프로그램 개발하기</a></li>
<li><a class="reference internal" href="#running-without-a-subprocess">서브 프로세스 없이 실행하기</a></li>
</ul>
</li>
<li><a class="reference internal" href="#help-and-preferences">Help and Preferences</a><ul>
<li><a class="reference internal" href="#help-sources">도움말 소스</a></li>
<li><a class="reference internal" href="#setting-preferences">환경 설정</a></li>
<li><a class="reference internal" href="#idle-on-macos">macOS의 IDLE</a></li>
<li><a class="reference internal" href="#extensions">확장</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-idlelib">idlelib</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>이전 항목</h4>
    <p class="topless"><a href="tkinter.tix.html"
                          title="이전 장"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.tix</span></code> — Extension widgets for Tk</a></p>
  </div>
  <div>
    <h4>다음 항목</h4>
    <p class="topless"><a href="development.html"
                          title="다음 장">개발 도구</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>이 페이지</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">버그 보고하기</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/idle.rst"
            rel="nofollow">소스 보기
        </a>
      </li>
    </ul>
  </div>
        </div>
<div id="sidebarbutton" title="사이드바 닫기">
<span>«</span>
</div>

      </div>
      <div class="clearer"></div>
    </div>  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>탐색</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="일반 색인"
             >색인</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Python 모듈 목록"
             >모듈</a> |</li>
        <li class="right" >
          <a href="development.html" title="개발 도구"
             >다음</a> |</li>
        <li class="right" >
          <a href="tkinter.tix.html" title="tkinter.tix — Extension widgets for Tk"
             >이전</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >파이썬 표준 라이브러리</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="tk.html" >Tk를 사용한 그래픽 사용자 인터페이스</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href="">IDLE</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" id="search-box" />
          <input type="submit" value="이동" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>  
    <div class="footer">
    &copy; 
      <a href="../copyright.html">
    
    저작권
    
      </a>
     2001-2024, Python Software Foundation.
    <br />
    This page is licensed under the Python Software Foundation License Version 2.
    <br />
    Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.
    <br />
    
      See <a href="/license.html">History and License</a> for more information.<br />
    
    
    <br />

    The Python Software Foundation is a non-profit corporation.
<a href="https://www.python.org/psf/donations/">Please donate.</a>
<br />
    <br />
      최종 업데이트: Jun 09, 2024 (17:23 UTC)
    
      <a href="/bugs.html">Found a bug</a>?
    
    <br />

    <a href="https://www.sphinx-doc.org/">Sphinx</a> 7.3.7 버전으로 생성되었습니다.
    </div>

    <script type="text/javascript" src="../_static/switchers.js"></script>
  </body>
</html>