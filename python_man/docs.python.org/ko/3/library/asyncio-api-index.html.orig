<!DOCTYPE html>

<html lang="ko" data-content_root="../">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="고수준 API 색인" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/asyncio-api-index.html" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="이 페이지에는 모든 고수준의 async/await 활성화된 asyncio API가 나열됩니다. 태스크: asyncio 프로그램을 실행하고, 태스크를 만들고, 시간제한 있게 여러 가지를 기다리는 유틸리티.,, run(), 이벤트 루프를 만들고, 코루틴을 실행하고, 루프를 닫습니다.,, Runner, A context manager that simplif..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="이 페이지에는 모든 고수준의 async/await 활성화된 asyncio API가 나열됩니다. 태스크: asyncio 프로그램을 실행하고, 태스크를 만들고, 시간제한 있게 여러 가지를 기다리는 유틸리티.,, run(), 이벤트 루프를 만들고, 코루틴을 실행하고, 루프를 닫습니다.,, Runner, A context manager that simplif..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>고수준 API 색인 &#8212; Python 3.12.4 문서</title><meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=80d5e7a1" />
    <link rel="stylesheet" type="text/css" href="../_static/pydoctheme.css?v=bb723527" />
    <link id="pygments_dark_css" media="(prefers-color-scheme: dark)" rel="stylesheet" type="text/css" href="../_static/pygments_dark.css?v=b20cc3f5" />
    
    <script src="../_static/documentation_options.js?v=3050f571"></script>
    <script src="../_static/doctools.js?v=9a2dae69"></script>
    <script src="../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../_static/translations.js?v=b5f768d8"></script>
    
    <script src="../_static/sidebar.js"></script>
    
    <link rel="search" type="application/opensearchdescription+xml"
          title="Python 3.12.4 문서에서 찾기"
          href="../_static/opensearch.xml"/>
    <link rel="author" title="이 문서 정보" href="../about.html" />
    <link rel="index" title="색인" href="../genindex.html" />
    <link rel="search" title="검색" href="../search.html" />
    <link rel="copyright" title="저작권" href="../copyright.html" />
    <link rel="next" title="저수준 API 색인" href="asyncio-llapi-index.html" />
    <link rel="prev" title="Extending" href="asyncio-extending.html" />
    
      <script defer data-domain="docs.python.org" src="https://plausible.io/js/script.js"></script>
    
    <link rel="canonical" href="https://docs.python.org/3/library/asyncio-api-index.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
<link rel="stylesheet" href="../_static/pydoctheme_dark.css" media="(prefers-color-scheme: dark)" id="pydoctheme_dark_css">
    <link rel="shortcut icon" type="image/png" href="../_static/py.svg" />
            <script type="text/javascript" src="../_static/copybutton.js"></script>
            <script type="text/javascript" src="../_static/menu.js"></script>
            <script type="text/javascript" src="../_static/search-focus.js"></script>
            <script type="text/javascript" src="../_static/themetoggle.js"></script> 
<meta name="readthedocs-addons-api-version" content="1">
<script type="text/javascript">
 function onSwitch(event) {
     const option = event.target.selectedIndex;
     const item = event.target.options[option];
     window.location.href = item.dataset.url;
 }

 document.addEventListener("readthedocs-addons-data-ready", function(event) {
   const config = event.detail.data()

   // Add some mocked hardcoded versions pointing to the official
   // documentation while migrating to Read the Docs.
   // These are only for testing purposes.
   // TODO: remove them when managing all the versions on Read the Docs,
   // since all the "active, built and not hidden" versions will be shown automatically.
   let versions = config.versions.active.concat([
       {
           slug: "dev (3.13)",
           urls: {
               documentation: "https://docs.python.org/3.13/",
           }
       },
       {
           slug: "3.12",
           urls: {
               documentation: "https://docs.python.org/3.12/",
           }
       },
       {
           slug: "3.11",
           urls: {
               documentation: "https://docs.python.org/3.11/",
           }
       },
   ]);

   const versionSelect = `
   <select id="version_select">
   ${ versions.map(
       (version) => `
       <option
           value="${ version.slug }"
           ${ config.versions.current.slug === version.slug ? 'selected="selected"' : '' }
           data-url="${ version.urls.documentation }">
           ${ version.slug }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Prepend the current language to the options on the selector
   let languages = config.projects.translations.concat(config.projects.current);
   languages = languages.sort((a, b) => a.language.name.localeCompare(b.language.name));

   const languageSelect = `
   <select id="language_select">
   ${ languages.map(
       (translation) => `
       <option
           value="${ translation.slug }"
           ${ config.projects.current.slug === translation.slug ? 'selected="selected"' : '' }
           data-url="${ translation.urls.documentation }">
           ${ translation.language.name }
       </option>`
   ).join("\n") }
   </select>
   `;

   // Query all the placeholders because there are different ones for Desktop/Mobile
   const versionPlaceholders = document.querySelectorAll(".version_switcher_placeholder");
   for (placeholder of versionPlaceholders) {
       placeholder.innerHTML = versionSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }

   const languagePlaceholders = document.querySelectorAll(".language_switcher_placeholder");
   for (placeholder of languagePlaceholders) {
       placeholder.innerHTML = languageSelect;
       let selectElement = placeholder.querySelector("select");
       selectElement.addEventListener("change", onSwitch);
   }
 });
</script>

  </head>
<body>
<div class="mobile-nav">
    <input type="checkbox" id="menuToggler" class="toggler__input" aria-controls="navigation"
           aria-pressed="false" aria-expanded="false" role="button" aria-label="Menu" />
    <nav class="nav-content" role="navigation">
        <label for="menuToggler" class="toggler__label">
            <span></span>
        </label>
        <span class="nav-items-wrapper">
            <a href="https://www.python.org/" class="nav-logo">
                <img src="../_static/py.svg" alt="Python logo"/>
            </a>
            <span class="version_switcher_placeholder"></span>
            <form role="search" class="search" action="../search.html" method="get">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" class="search-icon">
                    <path fill-rule="nonzero" fill="currentColor" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path>
                </svg>
                <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" />
                <input type="submit" value="이동"/>
            </form>
        </span>
    </nav>
    <div class="menu-wrapper">
        <nav class="menu" role="navigation" aria-label="main navigation">
            <div class="language_switcher_placeholder"></div>
            
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label>
  <div>
    <h3><a href="../contents.html">목차</a></h3>
    <ul>
<li><a class="reference internal" href="#">고수준 API 색인</a><ul>
<li><a class="reference internal" href="#tasks">태스크</a></li>
<li><a class="reference internal" href="#queues">큐</a></li>
<li><a class="reference internal" href="#subprocesses">서브 프로세스</a></li>
<li><a class="reference internal" href="#streams">스트림</a></li>
<li><a class="reference internal" href="#synchronization">동기화</a></li>
<li><a class="reference internal" href="#exceptions">예외</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>이전 항목</h4>
    <p class="topless"><a href="asyncio-extending.html"
                          title="이전 장">Extending</a></p>
  </div>
  <div>
    <h4>다음 항목</h4>
    <p class="topless"><a href="asyncio-llapi-index.html"
                          title="다음 장">저수준 API 색인</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>이 페이지</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">버그 보고하기</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/asyncio-api-index.rst"
            rel="nofollow">소스 보기
        </a>
      </li>
    </ul>
  </div>
        </nav>
    </div>
</div>

  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>탐색</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="일반 색인"
             accesskey="I">색인</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Python 모듈 목록"
             >모듈</a> |</li>
        <li class="right" >
          <a href="asyncio-llapi-index.html" title="저수준 API 색인"
             accesskey="N">다음</a> |</li>
        <li class="right" >
          <a href="asyncio-extending.html" title="Extending"
             accesskey="P">이전</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >파이썬 표준 라이브러리</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="ipc.html" >네트워킹과 프로세스 간 통신</a> &#187;</li>
          <li class="nav-item nav-item-3"><a href="asyncio.html" accesskey="U"><code class="xref py py-mod docutils literal notranslate"><span class="pre">asyncio</span></code> — Asynchronous I/O</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href="">고수준 API 색인</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" id="search-box" />
          <input type="submit" value="이동" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>    

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <section id="high-level-api-index">
<h1>고수준 API 색인<a class="headerlink" href="#high-level-api-index" title="Link to this heading">¶</a></h1>
<p>이 페이지에는 모든 고수준의 async/await 활성화된 asyncio API가 나열됩니다.</p>
<section id="tasks">
<h2>태스크<a class="headerlink" href="#tasks" title="Link to this heading">¶</a></h2>
<p>asyncio 프로그램을 실행하고, 태스크를 만들고, 시간제한 있게 여러 가지를 기다리는 유틸리티.</p>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-runner.html#asyncio.run" title="asyncio.run"><code class="xref py py-func docutils literal notranslate"><span class="pre">run()</span></code></a></p></td>
<td><p>이벤트 루프를 만들고, 코루틴을 실행하고, 루프를 닫습니다.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-runner.html#asyncio.Runner" title="asyncio.Runner"><code class="xref py py-class docutils literal notranslate"><span class="pre">Runner</span></code></a></p></td>
<td><p>A context manager that simplifies multiple async function calls.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.Task" title="asyncio.Task"><code class="xref py py-class docutils literal notranslate"><span class="pre">Task</span></code></a></p></td>
<td><p>Task 객체.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.TaskGroup" title="asyncio.TaskGroup"><code class="xref py py-class docutils literal notranslate"><span class="pre">TaskGroup</span></code></a></p></td>
<td><p>A context manager that holds a group of tasks. Provides
a convenient and reliable way to wait for all tasks in the group to
finish.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.create_task" title="asyncio.create_task"><code class="xref py py-func docutils literal notranslate"><span class="pre">create_task()</span></code></a></p></td>
<td><p>Start an asyncio Task, then returns it.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.current_task" title="asyncio.current_task"><code class="xref py py-func docutils literal notranslate"><span class="pre">current_task()</span></code></a></p></td>
<td><p>현재 Task를 돌려줍니다.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.all_tasks" title="asyncio.all_tasks"><code class="xref py py-func docutils literal notranslate"><span class="pre">all_tasks()</span></code></a></p></td>
<td><p>Return all tasks that are not yet finished for an event loop.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.sleep" title="asyncio.sleep"><code class="xref py py-func docutils literal notranslate"><span class="pre">sleep()</span></code></a></p></td>
<td><p>몇 초 동안 잠잡니다.</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.gather" title="asyncio.gather"><code class="xref py py-func docutils literal notranslate"><span class="pre">gather()</span></code></a></p></td>
<td><p>여러 가지를 동시에 예약하고 기다립니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.wait_for" title="asyncio.wait_for"><code class="xref py py-func docutils literal notranslate"><span class="pre">wait_for()</span></code></a></p></td>
<td><p>시간제한 있게 실행합니다.</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.shield" title="asyncio.shield"><code class="xref py py-func docutils literal notranslate"><span class="pre">shield()</span></code></a></p></td>
<td><p>취소로부터 보호합니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.wait" title="asyncio.wait"><code class="xref py py-func docutils literal notranslate"><span class="pre">wait()</span></code></a></p></td>
<td><p>완료를 감시합니다.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.timeout" title="asyncio.timeout"><code class="xref py py-func docutils literal notranslate"><span class="pre">timeout()</span></code></a></p></td>
<td><p>Run with a timeout. Useful in cases when <code class="docutils literal notranslate"><span class="pre">wait_for</span></code> is not suitable.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.to_thread" title="asyncio.to_thread"><code class="xref py py-func docutils literal notranslate"><span class="pre">to_thread()</span></code></a></p></td>
<td><p>Asynchronously run a function in a separate OS thread.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-task.html#asyncio.run_coroutine_threadsafe" title="asyncio.run_coroutine_threadsafe"><code class="xref py py-func docutils literal notranslate"><span class="pre">run_coroutine_threadsafe()</span></code></a></p></td>
<td><p>다른 OS 스레드에서 코루틴을 예약합니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">for</span> <span class="pre">in</span></code> <a class="reference internal" href="asyncio-task.html#asyncio.as_completed" title="asyncio.as_completed"><code class="xref py py-func docutils literal notranslate"><span class="pre">as_completed()</span></code></a></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">for</span></code> 루프로 완료를 감시합니다.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-task.html#asyncio-example-gather"><span class="std std-ref">여러 가지를 병렬로 실행하기 위해 asyncio.gather() 사용하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-task.html#asyncio-example-waitfor"><span class="std std-ref">시간제한을 주기 위해 asyncio.wait_for() 사용하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-task.html#asyncio-example-task-cancel"><span class="std std-ref">취소</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-task.html#asyncio-example-sleep"><span class="std std-ref">asyncio.sleep() 사용하기</span></a>.</p></li>
<li><p>주 <a class="reference internal" href="asyncio-task.html#coroutine"><span class="std std-ref">태스크 설명서 페이지</span></a>를 참조하십시오.</p></li>
</ul>
</section>
<section id="queues">
<h2>큐<a class="headerlink" href="#queues" title="Link to this heading">¶</a></h2>
<p>큐는 여러 asyncio 태스크 간에 작업을 분산하고, 연결 풀과 pub/sub 패턴을 구현하는 데 사용해야 합니다.</p>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-queue.html#asyncio.Queue" title="asyncio.Queue"><code class="xref py py-class docutils literal notranslate"><span class="pre">Queue</span></code></a></p></td>
<td><p>FIFO 큐.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-queue.html#asyncio.PriorityQueue" title="asyncio.PriorityQueue"><code class="xref py py-class docutils literal notranslate"><span class="pre">PriorityQueue</span></code></a></p></td>
<td><p>우선순위 큐.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-queue.html#asyncio.LifoQueue" title="asyncio.LifoQueue"><code class="xref py py-class docutils literal notranslate"><span class="pre">LifoQueue</span></code></a></p></td>
<td><p>LIFO 큐.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-queue.html#asyncio-example-queue-dist"><span class="std std-ref">여러 태스크로 작업부하를 분산하는데 asyncio.Queue 사용하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-queue.html#asyncio-queues"><span class="std std-ref">큐 설명서 페이지</span></a>도 참조하십시오.</p></li>
</ul>
</section>
<section id="subprocesses">
<h2>서브 프로세스<a class="headerlink" href="#subprocesses" title="Link to this heading">¶</a></h2>
<p>서브 프로세스를 생성하고 셸 명령을 실행하는 유틸리티.</p>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-subprocess.html#asyncio.create_subprocess_exec" title="asyncio.create_subprocess_exec"><code class="xref py py-func docutils literal notranslate"><span class="pre">create_subprocess_exec()</span></code></a></p></td>
<td><p>서브 프로세스를 만듭니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-subprocess.html#asyncio.create_subprocess_shell" title="asyncio.create_subprocess_shell"><code class="xref py py-func docutils literal notranslate"><span class="pre">create_subprocess_shell()</span></code></a></p></td>
<td><p>셸 명령을 실행합니다.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-subprocess.html#asyncio-example-subprocess-shell"><span class="std std-ref">셸 명령 실행하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-subprocess.html#asyncio-subprocess"><span class="std std-ref">서브 프로세스 API</span></a> 설명서도 참조하십시오.</p></li>
</ul>
</section>
<section id="streams">
<h2>스트림<a class="headerlink" href="#streams" title="Link to this heading">¶</a></h2>
<p>네트워크 IO로 작업하는 고수준 API</p>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-stream.html#asyncio.open_connection" title="asyncio.open_connection"><code class="xref py py-func docutils literal notranslate"><span class="pre">open_connection()</span></code></a></p></td>
<td><p>TCP 연결을 만듭니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-stream.html#asyncio.open_unix_connection" title="asyncio.open_unix_connection"><code class="xref py py-func docutils literal notranslate"><span class="pre">open_unix_connection()</span></code></a></p></td>
<td><p>유닉스 소켓 연결을 만듭니다.</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-stream.html#asyncio.start_server" title="asyncio.start_server"><code class="xref py py-func docutils literal notranslate"><span class="pre">start_server()</span></code></a></p></td>
<td><p>TCP 서버를 시작합니다.</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">await</span></code> <a class="reference internal" href="asyncio-stream.html#asyncio.start_unix_server" title="asyncio.start_unix_server"><code class="xref py py-func docutils literal notranslate"><span class="pre">start_unix_server()</span></code></a></p></td>
<td><p>유닉스 소켓 서버를 시작합니다.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-stream.html#asyncio.StreamReader" title="asyncio.StreamReader"><code class="xref py py-class docutils literal notranslate"><span class="pre">StreamReader</span></code></a></p></td>
<td><p>네트워크 데이터를 수신하는 고수준 async/await 객체.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-stream.html#asyncio.StreamWriter" title="asyncio.StreamWriter"><code class="xref py py-class docutils literal notranslate"><span class="pre">StreamWriter</span></code></a></p></td>
<td><p>네트워크 데이터를 보내는 고수준 async/await 객체.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-stream.html#asyncio-example-stream"><span class="std std-ref">예제 TCP 클라이언트</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-stream.html#asyncio-streams"><span class="std std-ref">스트림 API</span></a> 설명서도 참조하십시오.</p></li>
</ul>
</section>
<section id="synchronization">
<h2>동기화<a class="headerlink" href="#synchronization" title="Link to this heading">¶</a></h2>
<p>태스크에 쓸 수 있는 threading과 유사한 동기화 프리미티브.</p>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.Lock" title="asyncio.Lock"><code class="xref py py-class docutils literal notranslate"><span class="pre">Lock</span></code></a></p></td>
<td><p>뮤텍스 록.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.Event" title="asyncio.Event"><code class="xref py py-class docutils literal notranslate"><span class="pre">Event</span></code></a></p></td>
<td><p>이벤트 객체.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.Condition" title="asyncio.Condition"><code class="xref py py-class docutils literal notranslate"><span class="pre">Condition</span></code></a></p></td>
<td><p>조건 객체.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.Semaphore" title="asyncio.Semaphore"><code class="xref py py-class docutils literal notranslate"><span class="pre">Semaphore</span></code></a></p></td>
<td><p>세마포어.</p></td>
</tr>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.BoundedSemaphore" title="asyncio.BoundedSemaphore"><code class="xref py py-class docutils literal notranslate"><span class="pre">BoundedSemaphore</span></code></a></p></td>
<td><p>제한된 세마포어.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.Barrier" title="asyncio.Barrier"><code class="xref py py-class docutils literal notranslate"><span class="pre">Barrier</span></code></a></p></td>
<td><p>A barrier object.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-sync.html#asyncio-example-sync-event"><span class="std std-ref">asyncio.Event 사용하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-sync.html#asyncio-example-barrier"><span class="std std-ref">Using asyncio.Barrier</span></a>.</p></li>
<li><p>asyncio <a class="reference internal" href="asyncio-sync.html#asyncio-sync"><span class="std std-ref">동기화 프리미티브</span></a>의 설명서도 참조하십시오.</p></li>
</ul>
</section>
<section id="exceptions">
<h2>예외<a class="headerlink" href="#exceptions" title="Link to this heading">¶</a></h2>
<table class="full-width-table docutils align-default">
<colgroup>
<col style="width: 50.0%" />
<col style="width: 50.0%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><a class="reference internal" href="asyncio-exceptions.html#asyncio.CancelledError" title="asyncio.CancelledError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">asyncio.CancelledError</span></code></a></p></td>
<td><p>Task가 취소될 때 발생합니다. <a class="reference internal" href="asyncio-task.html#asyncio.Task.cancel" title="asyncio.Task.cancel"><code class="xref py py-meth docutils literal notranslate"><span class="pre">Task.cancel()</span></code></a>도 참조하십시오.</p></td>
</tr>
<tr class="row-even"><td><p><a class="reference internal" href="asyncio-sync.html#asyncio.BrokenBarrierError" title="asyncio.BrokenBarrierError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">asyncio.BrokenBarrierError</span></code></a></p></td>
<td><p>Raised when a Barrier is broken. See also <a class="reference internal" href="asyncio-sync.html#asyncio.Barrier.wait" title="asyncio.Barrier.wait"><code class="xref py py-meth docutils literal notranslate"><span class="pre">Barrier.wait()</span></code></a>.</p></td>
</tr>
</tbody>
</table>
<p class="rubric">예제</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-task.html#asyncio-example-task-cancel"><span class="std std-ref">취소 요청 시에 코드를 실행하기 위해 CancelledError 처리하기</span></a>.</p></li>
<li><p><a class="reference internal" href="asyncio-exceptions.html#asyncio-exceptions"><span class="std std-ref">asyncio 전용 예외</span></a>의 전체 목록도 참조하십시오.</p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
        </div>
      </div>
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
  <div>
    <h3><a href="../contents.html">목차</a></h3>
    <ul>
<li><a class="reference internal" href="#">고수준 API 색인</a><ul>
<li><a class="reference internal" href="#tasks">태스크</a></li>
<li><a class="reference internal" href="#queues">큐</a></li>
<li><a class="reference internal" href="#subprocesses">서브 프로세스</a></li>
<li><a class="reference internal" href="#streams">스트림</a></li>
<li><a class="reference internal" href="#synchronization">동기화</a></li>
<li><a class="reference internal" href="#exceptions">예외</a></li>
</ul>
</li>
</ul>

  </div>
  <div>
    <h4>이전 항목</h4>
    <p class="topless"><a href="asyncio-extending.html"
                          title="이전 장">Extending</a></p>
  </div>
  <div>
    <h4>다음 항목</h4>
    <p class="topless"><a href="asyncio-llapi-index.html"
                          title="다음 장">저수준 API 색인</a></p>
  </div>
  <div role="note" aria-label="source link">
    <h3>이 페이지</h3>
    <ul class="this-page-menu">
      <li><a href="../bugs.html">버그 보고하기</a></li>
      <li>
        <a href="https://github.com/python/cpython/blob/main/Doc/library/asyncio-api-index.rst"
            rel="nofollow">소스 보기
        </a>
      </li>
    </ul>
  </div>
        </div>
<div id="sidebarbutton" title="사이드바 닫기">
<span>«</span>
</div>

      </div>
      <div class="clearer"></div>
    </div>  
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>탐색</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex.html" title="일반 색인"
             >색인</a></li>
        <li class="right" >
          <a href="../py-modindex.html" title="Python 모듈 목록"
             >모듈</a> |</li>
        <li class="right" >
          <a href="asyncio-llapi-index.html" title="저수준 API 색인"
             >다음</a> |</li>
        <li class="right" >
          <a href="asyncio-extending.html" title="Extending"
             >이전</a> |</li>

          <li><img src="../_static/py.svg" alt="Python logo" style="vertical-align: middle; margin-top: -1px"/></li>
          <li><a href="https://www.python.org/">Python</a> &#187;</li>
          <li class="switchers">
            <div class="language_switcher_placeholder"></div>
            <div class="version_switcher_placeholder"></div>
          </li>
          <li>
              
          </li>
    <li id="cpython-language-and-version">
      <a href="../index.html">3.12.4 Documentation</a> &#187;
    </li>

          <li class="nav-item nav-item-1"><a href="index.html" >파이썬 표준 라이브러리</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="ipc.html" >네트워킹과 프로세스 간 통신</a> &#187;</li>
          <li class="nav-item nav-item-3"><a href="asyncio.html" ><code class="xref py py-mod docutils literal notranslate"><span class="pre">asyncio</span></code> — Asynchronous I/O</a> &#187;</li>
        <li class="nav-item nav-item-this"><a href="">고수준 API 색인</a></li>
                <li class="right">
                    

    <div class="inline-search" role="search">
        <form class="inline-search" action="../search.html" method="get">
          <input placeholder="빠른 검색" aria-label="빠른 검색" type="search" name="q" id="search-box" />
          <input type="submit" value="이동" />
        </form>
    </div>
                     |
                </li>
            <li class="right">
<label class="theme-selector-label">
    Theme
    <select class="theme-selector" oninput="activateTheme(this.value)">
        <option value="auto" selected>Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
    </select>
</label> |</li>
            
      </ul>
    </div>  
    <div class="footer">
    &copy; 
      <a href="../copyright.html">
    
    저작권
    
      </a>
     2001-2024, Python Software Foundation.
    <br />
    This page is licensed under the Python Software Foundation License Version 2.
    <br />
    Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.
    <br />
    
      See <a href="/license.html">History and License</a> for more information.<br />
    
    
    <br />

    The Python Software Foundation is a non-profit corporation.
<a href="https://www.python.org/psf/donations/">Please donate.</a>
<br />
    <br />
      최종 업데이트: Jun 09, 2024 (17:23 UTC)
    
      <a href="/bugs.html">Found a bug</a>?
    
    <br />

    <a href="https://www.sphinx-doc.org/">Sphinx</a> 7.3.7 버전으로 생성되었습니다.
    </div>

    <script type="text/javascript" src="../_static/switchers.js"></script>
  </body>
</html>